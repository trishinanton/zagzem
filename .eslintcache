[{"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\index.js":"1","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\serviceWorkerRegistration.js":"2","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\App.js":"3","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\helpers\\transplit.js":"4","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\AppState.js":"5","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\AppRoutes.js":"6","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Main.js":"7","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Loader.js":"8","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\StickyFooter.js":"9","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Top.js":"10","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\MenuTree.jsx":"11","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Navigation.js":"12","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackForm.js":"13","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\services\\index.js":"14","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\villages\\index.js":"15","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\village\\index.js":"16","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\welcome\\index.js":"17","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\contact\\index.js":"18","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\SearchInput\\index.js":"19","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\InputPhone.js":"20","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\StyledInput.js":"21","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\api\\api.js":"22","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\services\\SimpleAccordion.js":"23","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Chooser.js":"24","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ReviewCard.js":"25","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackFormPopUp.js":"26","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackFormContact.js":"27","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ContactForm.js":"28","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\SlickSlider.js":"29","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IconBlock.js":"30","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Page.js":"31","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\SimilarVillages.js":"32","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\index.js":"33","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\index.js":"34","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IconButton.js":"35","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IndicatorDots.js":"36","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\utils.js":"37","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\helpers\\isImage.js":"38","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackPlanForm.js":"39","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CarouselButtons.js":"40","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IconButtonTC.js":"41","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\TargetForm.js":"42","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\MyMap.jsx":"43","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\Filter.js":"44","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Icons\\index.js":"45","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\AnimSlider.js":"46","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Icons\\Icons.js":"47","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CheckBox.js":"48","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\FilterMap.js":"49","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\SingleSelect.js":"50","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\MultiSelect.js":"51","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ArrowBottomAnim\\index.js":"52","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ArrowBottomAnim\\ArrowBottomAnim.js":"53"},{"size":5418,"mtime":1703521130388,"results":"54","hashOfConfig":"55"},{"size":5064,"mtime":1703521130398,"results":"56","hashOfConfig":"55"},{"size":1260,"mtime":1703521127703,"results":"57","hashOfConfig":"55"},{"size":1444,"mtime":1703521127886,"results":"58","hashOfConfig":"55"},{"size":11047,"mtime":1703521127704,"results":"59","hashOfConfig":"55"},{"size":823,"mtime":1703521127703,"results":"60","hashOfConfig":"55"},{"size":390,"mtime":1703521127727,"results":"61","hashOfConfig":"55"},{"size":1241,"mtime":1703521127726,"results":"62","hashOfConfig":"55"},{"size":8937,"mtime":1703528693042,"results":"63","hashOfConfig":"55"},{"size":9577,"mtime":1703528708398,"results":"64","hashOfConfig":"55"},{"size":4575,"mtime":1703521127727,"results":"65","hashOfConfig":"55"},{"size":1578,"mtime":1703521127728,"results":"66","hashOfConfig":"55"},{"size":5413,"mtime":1703521127712,"results":"67","hashOfConfig":"55"},{"size":5739,"mtime":1703521130393,"results":"68","hashOfConfig":"55"},{"size":11697,"mtime":1703521130394,"results":"69","hashOfConfig":"55"},{"size":1373,"mtime":1703521130394,"results":"70","hashOfConfig":"55"},{"size":7001,"mtime":1703521130395,"results":"71","hashOfConfig":"55"},{"size":1470,"mtime":1703521130391,"results":"72","hashOfConfig":"55"},{"size":4924,"mtime":1703521127731,"results":"73","hashOfConfig":"55"},{"size":749,"mtime":1703521127726,"results":"74","hashOfConfig":"55"},{"size":1165,"mtime":1703521127733,"results":"75","hashOfConfig":"55"},{"size":1659,"mtime":1703521127705,"results":"76","hashOfConfig":"55"},{"size":5385,"mtime":1703521130392,"results":"77","hashOfConfig":"55"},{"size":7807,"mtime":1703521127717,"results":"78","hashOfConfig":"55"},{"size":7093,"mtime":1703521127730,"results":"79","hashOfConfig":"55"},{"size":4867,"mtime":1703521127715,"results":"80","hashOfConfig":"55"},{"size":6607,"mtime":1703521127713,"results":"81","hashOfConfig":"55"},{"size":2857,"mtime":1703521127717,"results":"82","hashOfConfig":"55"},{"size":1690,"mtime":1703521127707,"results":"83","hashOfConfig":"55"},{"size":1173,"mtime":1703521127721,"results":"84","hashOfConfig":"55"},{"size":30315,"mtime":1703521127729,"results":"85","hashOfConfig":"55"},{"size":2341,"mtime":1703521127732,"results":"86","hashOfConfig":"55"},{"size":53,"mtime":1703521127720,"results":"87","hashOfConfig":"55"},{"size":65,"mtime":1703521127708,"results":"88","hashOfConfig":"55"},{"size":2013,"mtime":1703521127722,"results":"89","hashOfConfig":"55"},{"size":987,"mtime":1703521127725,"results":"90","hashOfConfig":"55"},{"size":745,"mtime":1703521127710,"results":"91","hashOfConfig":"55"},{"size":118,"mtime":1703521127885,"results":"92","hashOfConfig":"55"},{"size":3811,"mtime":1703521127715,"results":"93","hashOfConfig":"55"},{"size":1204,"mtime":1703521127716,"results":"94","hashOfConfig":"55"},{"size":2445,"mtime":1703521127722,"results":"95","hashOfConfig":"55"},{"size":7551,"mtime":1703521127733,"results":"96","hashOfConfig":"55"},{"size":1658,"mtime":1703521127728,"results":"97","hashOfConfig":"55"},{"size":15753,"mtime":1703521127718,"results":"98","hashOfConfig":"55"},{"size":50,"mtime":1703521127725,"results":"99","hashOfConfig":"55"},{"size":2160,"mtime":1703521127706,"results":"100","hashOfConfig":"55"},{"size":276,"mtime":1703521127723,"results":"101","hashOfConfig":"55"},{"size":1105,"mtime":1703521127716,"results":"102","hashOfConfig":"55"},{"size":2550,"mtime":1703521127718,"results":"103","hashOfConfig":"55"},{"size":1879,"mtime":1703521127720,"results":"104","hashOfConfig":"55"},{"size":2164,"mtime":1703521127719,"results":"105","hashOfConfig":"55"},{"size":80,"mtime":1703521127711,"results":"106","hashOfConfig":"55"},{"size":724,"mtime":1703521127710,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8kmpfv",{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\index.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\serviceWorkerRegistration.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\App.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\helpers\\transplit.js",["234"],"function translit(word){\n    if(word === undefined) word = 'a'\n\n    word = word.trim().split(' ').map( el => el[0].toLowerCase() + el.slice(1)).join('-')\n    var answer = '';\n    var converter = {\n        'а': 'a',    'б': 'b',    'в': 'v',    'г': 'g',    'д': 'd',\n        'е': 'e',    'ё': 'e',    'ж': 'zh',   'з': 'z',    'и': 'i',\n        'й': 'y',    'к': 'k',    'л': 'l',    'м': 'm',    'н': 'n',\n        'о': 'o',    'п': 'p',    'р': 'r',    'с': 's',    'т': 't',\n        'у': 'u',    'ф': 'f',    'х': 'h',    'ц': 'c',    'ч': 'ch',\n        'ш': 'sh',   'щ': 'sch',  'ь': '',     'ы': 'y',    'ъ': '',\n        'э': 'e',    'ю': 'yu',   'я': 'ya',\n\n        'А': 'A',    'Б': 'B',    'В': 'V',    'Г': 'G',    'Д': 'D',\n        'Е': 'E',    'Ё': 'E',    'Ж': 'Zh',   'З': 'Z',    'И': 'I',\n        'Й': 'Y',    'К': 'K',    'Л': 'L',    'М': 'M',    'Н': 'N',\n        'О': 'O',    'П': 'P',    'Р': 'R',    'С': 'S',    'Т': 'T',\n        'У': 'U',    'Ф': 'F',    'Х': 'H',    'Ц': 'C',    'Ч': 'Ch',\n        'Ш': 'Sh',   'Щ': 'Sch',  'Ь': '',     'Ы': 'Y',    'Ъ': '',\n        'Э': 'E',    'Ю': 'Yu',   'Я': 'Ya'\n    };\n\n    for (var i = 0; i < word.length; ++i ) {\n        if (converter[word[i]] == undefined){\n            answer += word[i];\n        } else {\n            answer += converter[word[i]];\n        }\n    }\n\n    return answer;\n}\n\nexport default translit","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\AppState.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\AppRoutes.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Main.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Loader.js",["235","236"],"import React, {useRef} from 'react'\nimport styled from 'styled-components'\nimport Grid from '@material-ui/core/Grid'\nimport logo from '../img/logo.png';\nimport CircleType from 'circletype';\n\nconst Logo = styled.img`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  @media (prefers-reduced-motion: no-preference) {\n    animation: rotate-logo-spin infinite 1s linear;\n  }\n  @keyframes rotate-logo-spin {\n  from {\n    transform: scale(1);\n  }\n  to {\n    transform: scale(1.2);\n  }\n`\n\n\nconst Loader = () => {\n    // let target = useRef()\n    //\n    //\n    // new CircleType(target.current).radius(384);\n  return (\n    <Grid container justifyContent='center' alignItems='center' style={{position:'fixed',height:'100vh',width:'100vw',top:'0'}}>\n        <div style={{position:'relative'}}>\n            {/*<div ref={target} style={{top:'-100px',position:'absolute',fontFamily: \"Roboto,sans-serif\", color: '#3c4b5a',fontSize: '1.5rem',fontWeight: '700'}}>Загородные Земли</div>*/}\n            <Logo\n                src={logo}\n                style={{\n                    width: '200px',\n                    height: '200px'\n                }}\n            />\n        </div>\n\n    </Grid>\n  )\n}\n\nexport default Loader \n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\StickyFooter.js",["237","238","239"],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Top.js",["240","241","242"],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\MenuTree.jsx",["243"],"import React from 'react'\nimport AppState from '../AppState'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TreeView from '@material-ui/lab/TreeView'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport HomeIcon from '@material-ui/icons/Home'\nimport HouseIcon from '@material-ui/icons/House';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport Divider from '@material-ui/core/Divider'\n\nconst useTreeItemStyles = makeStyles(theme => ({\n  root: {\n    color: '#FFF',\n    '&:focus > $content': {\n      backgroundColor: '#FFF',\n    },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  group: {\n    marginLeft: 0,\n    '& $content': {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1.2, 0),\n  },\n  labelIcon: {\n    marginRight: theme.spacing(2),\n  },\n  labelText: {\n    color: '#3c4b5a',\n    flexGrow: 1,\n    lineHeight: '40px',\n  },\n}));\n\nfunction StyledTreeItem(props) {\n  const classes = useTreeItemStyles()\n  const { labelText, labelIcon: LabelIcon, color, bgColor, ...other } = props\n\n  return (\n    <TreeItem\n      label={\n        <div className={classes.labelRoot}>\n          <h4>{labelText}</h4>\n        </div>\n      }\n      classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        group: classes.group,\n        label: classes.label,\n      }}\n      {...other}\n    />\n  )\n}\n\nStyledTreeItem.propTypes = {\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  labelIcon: PropTypes.elementType.isRequired,\n  labelText: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n});\n\nconst MenuTree = (props) => {\n  const classes = useStyles()\n  const hide = props.hide\n  const context = React.useContext(AppState) \n\n  return (\n    <TreeView\n      className={classes.root}\n      defaultCollapseIcon={<ArrowDropDownIcon />}\n      defaultExpandIcon={<ArrowRightIcon />}\n      defaultEndIcon={<div style={{ width: 24 }} />}\n      style={{paddingBottom:'60px'}}\n    >\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Link to='/' onClick={()=>hide()}>\n      <StyledTreeItem\n        nodeId=\"0\"\n        labelText=\"Главная\"\n        labelIcon={HomeIcon}\n      />\n      </Link>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n\n      <StyledTreeItem\n        nodeId=\"1\"\n        labelText=\"Поселки\"\n        labelIcon={HomeWorkIcon}\n        color=\"#1a73e8\"\n        bgColor=\"#e8f0fe\"\n      >\n        <Link to='/villages' onClick={()=>{hide();context.selectOnlyVillageType(1)}}>\n        <StyledTreeItem\n          nodeId=\"2\"\n          labelText=\"Коттеджные поселки\"\n          labelIcon={HouseIcon}\n          color=\"#1a73e8\"\n          bgColor=\"#e8f0fe\"\n        />\n        </Link>\n        <Link to='/villages' onClick={()=>{hide();;context.selectOnlyVillageType(2)}}>\n        <StyledTreeItem\n          nodeId=\"3\"\n          labelText=\"Дачные поселки\"\n          labelIcon={HouseIcon}\n          color=\"#1a73e8\"\n          bgColor=\"#e8f0fe\"\n        />\n        </Link>\n      </StyledTreeItem>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Link to='/services' onClick={()=>hide()}>\n      <StyledTreeItem\n        nodeId=\"5\"\n        labelText=\"Услуги\"\n        labelIcon={PlaylistAddCheckIcon}\n        color=\"#1a73e8\"\n        bgColor=\"#e8f0fe\"\n      />\n      </Link>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n      <Link to='/contact' onClick={()=>hide()}>\n      <StyledTreeItem\n        nodeId=\"7\"\n        labelText=\"Контакты\"\n        labelIcon={PhoneIcon}\n        color=\"#1a73e8\"\n        bgColor=\"#e8f0fe\"\n      />\n      </Link>\n      <Divider style={{background:'#eff3f4',height:'0.5px'}} />\n    </TreeView>\n  );\n}\n\nexport { MenuTree }\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Navigation.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackForm.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\services\\index.js",["244"],"import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Chooser from \"../../components/Chooser\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Filter from \"../../components/Filter\";\nimport {SimpleAccordion} from \"./SimpleAccordion\";\nimport zemlyaIf from '../../img/images/zemlya_if.png';\nimport agenstvo from '../../img/images/agenstvo.png'\nimport CallbackFormPopUp from \"../../components/CallbackFormPopUp\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport './index.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    land: {\n        flexDirection: 'column',\n        [theme.breakpoints.up('md')]: {\n\n        }\n    }\n}))\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nclass ServicesPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        showFilter: false,\n        showDialog: false\n    }\n  }\n\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n  setShowDialog = () => {\n      this.setState({showDialog: true})\n  }\n  setCloseDialog = () => {\n      this.setState({showDialog: false})\n  }\n\n  setShowFilter = () => {\n        this.setState({ showFilter: true })\n  }\n\n  setHideFilter = () => {\n        this.setState({ showFilter: false })\n  }\n  render() {\n    return (\n      <React.Fragment>\n          <Dialog\n              open={this.state.showDialog}\n              fullWidth={true}\n              maxWidth='sm'\n              TransitionComponent={Transition}\n              onClose={() => {\n                  this.setCloseDialog()\n              }}\n          >\n              <CallbackFormPopUp />\n          </Dialog>\n      <Container maxWidth=\"lg\">\n          {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\n        <Box my={2}>\n            <h2 className='title' style={{marginBottom: '22px', marginTop: '40px'}}>МЫ - <span style={{color: '#01eb88'}}>«Загородные земли»</span></h2>\n            <h4 className='description'>И мы предлагаем открытое сотрудничество!</h4>\n            <h4 style={{marginBottom: '40px'}}>Мы оказываем <span style={{color: '#01eb88'}}>услуги по созданию и реализации коттеджных и дачных поселков:</span></h4>\n        </Box>\n\n          <div className='land'>\n              <div className='land_img'>\n                  <img src={zemlyaIf} alt=\"\"/>\n              </div>\n              <Box>\n                  <h3 className='title_land' style={{\n                      textAlign:'left',\n                      color: '#3C4B5A',\n                      fontFamily: 'Roboto, sans-serif',\n                      fontWeight: '900',\n                      marginBottom: '40px'\n                  }}>Если у тебя есть земля, <span className='title_span' style={{color: '#01eb88'}}>МЫ:</span></h3>\n\n                  <SimpleAccordion/>\n              </Box>\n          </div>\n\n        <div className='agency'>\n            <Box my={2}>\n                <h3 style={{\n                    textAlign:'left',\n                    color: '#3C4B5A',\n                    fontFamily: 'Roboto, sans-serif',\n                    fontWeight: '900',\n                    marginBottom: '40px'\n                }}>Если у тебя<span style={{color: '#01eb88'}}> агентство недвижимости</span><br className='br'/> или <span style={{color: '#01eb88'}}>ты частный риелтор:</span></h3>\n\n                <Box m={2}>\n                    <h4 style={{color: 'black', fontWeight:'800'}}>Мы ждем от тебя:</h4>\n                    <h5>Поиск клиента самостоятельно и ведение его любым удобным способом.</h5>\n                </Box>\n\n                <Box m={2}>\n                    <h4 style={{color: 'black'}}>Мы предоставим тебе:</h4>\n                    <h5>&mdash; Юридическое сопровождение сделки</h5>\n                    <h5>&mdash; Офис для подписания договоров</h5>\n                    <h5>&mdash; Информацию о последних новостях в поселке</h5>\n                    <h5>&mdash; Проведем показы в наших поселках</h5>\n                    <h5>&mdash; Проведем БЕСПЛАТНОЕ обучение, для тебя или твоих агентов</h5>\n                    <h5>&mdash; Предоставим доступ к Базе знаний</h5>\n                </Box>\n            </Box>\n            <div className='agency_img'>\n                <img src={agenstvo} alt=\"\"/>\n            </div>\n        </div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <button style={{width: '350px'}} className='main-button main-button-large'\n                        onClick={()=>this.setShowDialog()}\n                >\n                    Написать нам\n                </button>\n            </div>\n\n\n          <Container maxWidth='lg' >\n              <Chooser />\n          </Container>\n          <div className='filter-button' onClick={this.setShowFilter}>\n              <h5 style={{position: 'absolute', top: '-30px'}}>Подобрать</h5>\n              <FilterListIcon style={{width:'55px',height:'55px',color:'#FFF'}} />\n          </div>\n      </Container>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ServicesPage\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\villages\\index.js",["245","246","247","248","249","250"],"import React, { useState, useEffect } from 'react'\nimport AppState from '../../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport Filter from '../../components/Filter'\nimport ReviewCard from '../../components/ReviewCard'\nimport Chooser from \"../../components/Chooser\";\nimport { villagesThumbnail as villages } from '../../index'\nimport { useFilterClicked } from '../..'\n\nconst postsPerPage = 9\n\nfunction arrayOfVillages(villages) {\n  // creating array with directions\n  let buildingDirections = [\n    {\n      side: 1,\n      sideName: 'Северное направление',\n      buildings: []\n    },\n    {\n      side: 2,\n      sideName: 'Южное направление:',\n      buildings: []\n    },\n    {\n      side: 3,\n      sideName: 'Западное направление:',\n      buildings: []\n    },\n    {\n      side: 4,\n      sideName: 'Восточное направление:',\n      buildings: []\n    },\n    {\n      side: 5,\n      sideName: 'Юго-западное направление:',\n      buildings: []\n    },\n    {\n      side: 6,\n      sideName: 'Юго-восточное направление',\n      buildings: []\n    },\n    {\n      side: 7,\n      sideName: 'Северо-западное направление',\n      buildings: []\n    }\n  ]\n  // making an array of buildings sorting it\n  for (const { sideOfMkad, ...props } of villages) {\n    buildingDirections[sideOfMkad - 1].buildings.push({ sideOfMkad, ...props })\n  }\n\n  // removing all empty building directions\n  buildingDirections = buildingDirections.filter(({ buildings }) => buildings.length !== 0)\n\n  return buildingDirections\n}\n\nfunction useVillageArray(villages) {\n  let buildingDirections = [\n    {\n      side: 1,\n      sideName: 'Северное направление',\n      buildings: []\n    },\n    {\n      side: 2,\n      sideName: 'Южное направление:',\n      buildings: []\n    },\n    {\n      side: 3,\n      sideName: 'Западное направление:',\n      buildings: []\n    },\n    {\n      side: 4,\n      sideName: 'Восточное направление:',\n      buildings: []\n    },\n    {\n      side: 5,\n      sideName: 'Юго-западное направление:',\n      buildings: []\n    },\n    {\n      side: 6,\n      sideName: 'Юго-восточное направление',\n      buildings: []\n    },\n    {\n      side: 7,\n      sideName: 'Северо-западное направление',\n      buildings: []\n    }\n  ]\n  // making an array of buildings sorting it\n  for (const { sideOfMkad, ...props } of villages) {\n    buildingDirections[sideOfMkad - 1].buildings.push({ sideOfMkad, ...props })\n  }\n\n  // removing all empty building directions\n  buildingDirections = buildingDirections.filter(({ buildings }) => buildings.length !== 0)\n\n\n  // create two empty arrays for both holded and display posts\n  const buildingDirectionsDisplay = []\n  const buildingDirectionsHolded = []\n\n  // getting posts we should hold and display\n  for (const { buildings } of buildingDirections) {\n    buildingDirectionsDisplay.push(buildings.slice(0, postsPerPage))\n    buildingDirectionsHolded.push(buildings.slice(postsPerPage))\n  }\n\n  // push to the original array what we should display\n  for (const index in buildingDirections) {\n    buildingDirections[index].buildings = buildingDirectionsDisplay[index]\n  }\n  return { buildingDirections, buildingDirectionsHolded }\n}\n\nfunction VillagesPage() {\n  const { filteredVillages: villages } = React.useContext(AppState)\n  console.log('villages: ', villages);\n\n  const [filterClicked, setFilterClicked] = useFilterClicked()\n\n\n  const { buildingDirectionsHolded, buildingDirections } = useVillageArray(villages)\n\n  const [showFilter, setShowFilter] = useState(false)\n  const [render, setRender] = useState(false)\n\n  const [hideButton, setHideButton] = useState()\n\n  const [posts, setPosts] = useState(buildingDirections)\n  const [holdedPosts, setHoldedPosts] = useState(buildingDirectionsHolded)\n\n  React.useEffect(() => {\n    if (filterClicked) {\n      setPosts(arrayOfVillages(villages))\n      setHideButton(true)\n    }\n    if (!filterClicked) {\n      setPosts(buildingDirections)\n      console.log('buildingDirections: ', buildingDirections);\n      setHoldedPosts(buildingDirectionsHolded)\n      console.log('buildingDirectionsHolded: ', buildingDirectionsHolded);\n      setHideButton(false)\n    }\n\n\n  }, [filterClicked, villages])\n\n\n  function handleShowMore(index) {\n    // getting new posts to publshing them from holded posts  \n    const getNewPosts = [...posts[index].buildings, ...holdedPosts[index].slice(0, postsPerPage)]\n    // remove ${postsPerPage} posts from holdedPosts\n    const deleteHoldedPosts = [...holdedPosts[index].slice(postsPerPage)]\n    // making a copy of array\n    const postsCopied = Array.from(posts)\n    const holdedPostsCopied = Array.from(holdedPosts)\n    // pusing new posts to update value\n    postsCopied[index].buildings = getNewPosts\n    // updating holding posts\n    holdedPostsCopied[index] = deleteHoldedPosts\n\n    setPosts(postsCopied)\n    setHoldedPosts(holdedPostsCopied)\n  }\n\n  function handleRender() {\n    window.scrollTo(0, 0)\n    setHideButton(true)\n    setRender(true)\n  }\n\n  return (\n    <Grid container>\n      {showFilter === true ? <Filter hidden={e => setShowFilter(false)} expanded={true} /> : ''}\n      <Container maxWidth='lg' style={{ marginBottom: '33px' }}>\n        <center>\n          <h2>{posts.length < 1 ? 'Посёлков не найдено' : ''}</h2>\n        </center>\n        <Grid container spacing={3}>\n          {posts.map(({ side, sideName, buildings }, index) => (\n            <>\n              {sideName ?\n                <>\n                  <Grid item xs={12} key={'HDR' + side}>\n                    <h3 style={{ padding: '25px 0 15px 0' }}>{sideName}</h3>\n                  </Grid>\n                  {buildings.map((item, i) =>\n                    <Grid item\n                      key={'IL2E' + item.uname + i}\n                      xs={12}\n                      sm={6}\n                      md={4}\n                    >\n                      <ReviewCard\n                        uid={item.uid}\n                        type={item.type}\n                        uname={item.uname}\n                        name={item.name}\n                        bgs={item.bgs}\n                        road={item.road}\n                        fromMkad={item.fromMkad}\n                        price={item.price}\n                        leftLands={item.leftLands}\n                        priceLands={item.priceLands}\n                        sideOfMkad={item.sideOfMkad}\n                        permittedUse={item.permittedUse}\n                        communications={item.communications}\n                      />\n                    </Grid>\n                  )}\n                  {!hideButton ?\n                    <div className=\"show-more\">\n                      <button\n                        onClick={() => handleShowMore(index)}\n                        hidden={holdedPosts[index].length === 0 ? true : false}\n                      >\n                        Показать еще\n                      </button>\n                    </div>\n                    : null}\n                </>\n                : null}\n            </>\n          ))}\n        </Grid>\n      </Container>\n      <div className='filter-button' onClick={e => {\n        setShowFilter(true)\n      }}>\n        <h5 style={{ position: 'absolute', top: '-30px' }}>Подобрать</h5>\n        <FilterListIcon style={{ width: '55px', height: '55px', color: '#FFF' }} />\n      </div>\n      <Container maxWidth='lg' >\n        <Chooser render={handleRender} />\n      </Container>\n    </Grid>\n  )\n}\n\n// export default VillagesPage\n\n\nclass VillagesPage1 extends React.Component {\n  static contextType = AppState\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showFilter: false,\n      url: 'http://poselki/wp-json/wp/v2/poselki',\n      render: false\n    }\n  }\n\n  // shouldComponentUpdate(nextProps, nextState, nextContext) {\n  //   // debugger\n  //   return false\n  // }\n\n  // componentWillMount() {\n  //   this.setFiltered()\n  // }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentDidUpdate() {\n    // window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n    this.context.resetFilter()\n  }\n\n  setShowFilter = () => {\n    this.setState({ showFilter: true })\n  }\n  setHideFilter = () => {\n    this.setState({ showFilter: false })\n  }\n  // setFiltered = () => {\n  //   this.setState({villages:this.context.filteredVillages})\n  // }\n  setRender = () => {\n    window.scrollTo(0, 0)\n    this.setState({ render: true })\n  }\n\n  render() {\n    const uniqSides = [1, 2, 3, 4, 5, 6, 7]\n    let villages = this.context.filteredVillages\n\n\n\n    const arrSides = []\n\n    for (let n = 0; n < uniqSides.length; n++) {\n      const side = uniqSides[n]\n      const newObj = []\n      let sideName = ''\n      if (side === 1) { sideName = 'Северное направление:' }\n      if (side === 2) { sideName = 'Южное направление:' }\n      if (side === 3) { sideName = 'Западное направление:' }\n      if (side === 4) { sideName = 'Восточное направление:' }\n      if (side === 5) { sideName = 'Юго-западное направление:' }\n      if (side === 6) { sideName = 'Юго-восточное направление' }\n      if (side === 7) { sideName = 'Северо-западное направление' }\n\n\n      var newArray = villages.filter(function (el) { return el.sideOfMkad === side })\n\n      if (newArray.length > 0) {\n        newObj.push(\n          <Grid item xs={12} key={'HDR' + side}>\n            <h3 style={{ padding: '25px 0 15px 0' }}>{sideName}</h3>\n          </Grid>\n        )\n        for (let i = 0; i < newArray.length; i++) {\n          newObj.push(\n            <Grid item\n              key={'IL2E' + newArray[i].uname + i}\n              xs={12}\n              sm={6}\n              md={4}\n            >\n              <ReviewCard\n                uid={newArray[i].uid}\n                type={newArray[i].type}\n                uname={newArray[i].uname}\n                name={newArray[i].name}\n                bgs={newArray[i].bgs}\n                road={newArray[i].road}\n                fromMkad={newArray[i].fromMkad}\n                price={newArray[i].price}\n                leftLands={newArray[i].leftLands}\n                priceLands={newArray[i].priceLands}\n                sideOfMkad={newArray[i].sideOfMkad}\n                permittedUse={newArray[i].permittedUse}\n                communications={newArray[i].communications}\n              />\n            </Grid>\n          )\n        }\n        arrSides.push(newObj)\n      }\n    }\n\n    return (\n      <Grid container>\n        {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\n        <Container maxWidth='lg' style={{ marginBottom: '33px' }}>\n          <center><h2>{arrSides.length < 1 ? 'Посёлков не найдено' : ''}</h2></center>\n          <Grid container spacing={3}>\n            {arrSides}\n          </Grid>\n        </Container>\n        <div className='filter-button' onClick={this.setShowFilter}>\n          <h5 style={{ position: 'absolute', top: '-30px' }}>Подобрать</h5>\n          <FilterListIcon style={{ width: '55px', height: '55px', color: '#FFF' }} />\n        </div>\n        <Container maxWidth='lg' >\n          <Chooser render={this.setRender} />\n        </Container>\n      </Grid>\n    )\n  }\n}\n\nexport default VillagesPage\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\village\\index.js",["251"],"import React, {useContext, useEffect, useState} from 'react'\nimport AppState from '../../AppState'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Page from '../../components/Page'\nimport SimilarVillages from '../../components/SimilarVillages'\nimport {useLocation} from \"react-router-dom\";\n\nexport const VillagePage = () => {\n    const context = useContext(AppState)\n    const path = useLocation()\n\n    const uname = path.pathname.substr(9)\n    const [village, setVillage] = useState({})\n    const villages = context.villages\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n\n        for (let i = 0; i < villages.length; i++) {\n            if (villages[i].uname === uname) {\n                setVillage(villages[i])\n            }\n        }\n        context.selectedVillage = village.name\n\n    }, [path])\n\n    return (<>\n        {Object.keys(village).length && <>\n            <Page village={village}/>\n            <Container maxWidth='lg'\n                       style={{\n                           padding: '15px 0'\n                       }}\n            >\n                <Box m={2}>\n                    <SimilarVillages uid={village.uid}\n                                     road={village.road} price={village.price}/>\n                </Box>\n            </Container>\n        </>}\n    </>)\n\n}\n\nexport default VillagePage\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\welcome\\index.js",["252","253","254"],"import React, {useState, useEffect, useRef} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Filter from '../../components/Filter'\nimport Chooser from '../../components/Chooser'\nimport ContactForm from '../../components/ContactForm'\nimport IconBlock from '../../components/IconBlock'\nimport AnimSlider from '../../components/AnimSlider'\nimport fonTest from '../../img/images/fon-test.jpg'\nimport { Link } from 'react-router-dom'\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CallbackFormPopUp from \"../../components/CallbackFormPopUp\";\nimport {SlickSlider} from \"../../components/AnimSlider/SlickSlider\";\n\nconst useStyles = makeStyles((theme) => ({\n  descr: {\n    padding: '0px 0px 25px 0px',\n  },\n  filter: {\n    position: 'relative',\n    width: '100%',\n    overflow: 'hidden',\n  },\n  bg: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    zIndex: '10',\n    borderRadius: '15px',\n  },\n  fg: {\n    position: 'relative',\n    width: '100%',\n    zIndex: '20',\n  },\n  testFon: {\n    width: '100%',\n    height: '350px',\n    background: `url(${fonTest})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'contain',\n  },\n  test: {\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    background: '#fff',\n    borderRadius: '15px',\n    overflow: 'hidden',\n    margin: '50px 0',\n  },\n  filterBlock: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'linear-gradient(180deg, rgba(158,209,91,1) 0%, rgba(1,235,136) 100%)',\n    borderRadius: '15px',\n  },\n  header: {\n    padding: '15px',\n    color: '#fff',\n  },\n  welcomeHeader: {\n    padding: '50px 0',\n    fontSize: '1.7rem',\n    textAlign: 'center',\n  }\n}))\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst WelcomePage = (props) => {\n\n  //observer\n  ////////////////////////////////////////////////////\n  const root = useRef(null);\n\n  const options = {\n    rootMargin: '0px',\n    threshold: [ 0 ]\n  };\n\n  const trueCallback = function(entries, observer) {\n    entries.forEach((entry) => {\n      const {target, isIntersecting} = entry;\n\n      if (isIntersecting) {\n        console.log('сработало')\n        setShowPopUp(true)\n        observer.unobserve(target)\n      }\n\n    })\n  }\n\n  const observer = new IntersectionObserver( trueCallback, options );\n  let target\n////////////////////////////////////////\n\n\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [showPopUp, setShowPopUp] = useState(false)\n\n  const handleScroll = () => {\n    const position = window.pageYOffset;\n    setScrollPosition(position);\n  };\n\n  useEffect(() => {\n\n    // let btnSlider = document.querySelector('.nextButton');\n    // btnSlider.classList.remove(\"disabled\");\n\n\n    target = root.current\n    observer.observe( target )\n\n    window.addEventListener('scroll', handleScroll, { passive: true });\n\n    return () => {\n        window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const classes = useStyles({ scrollPosition });\n  return (\n           <>\n             <Dialog\n                 open={showPopUp}\n                 fullWidth={true}\n                 maxWidth='sm'\n                 TransitionComponent={Transition}\n                 onClose={() => {\n                   setShowPopUp(false)\n                 }}\n             >\n               <CallbackFormPopUp />\n             </Dialog>\n\n      <div style={{position:'relative',width:'100%',height:'100%',top:'0'}}>\n        <Container maxWidth='lg' disableGutters={true}>\n          <SlickSlider />\n        </Container>\n      </div>\n\n      <Container maxWidth='lg'>\n        <h1 className={classes.welcomeHeader}>Подбери лучшее место для загородной жизни</h1>\n        <div className={classes.filterBlock}>\n          <div className={classes.filter}>\n            <div className={classes.bg} />\n            <div className={classes.fg}>\n              <Filter />\n            </div>\n          </div>\n        </div>\n      </Container>\n                 \n      <Container maxWidth='lg'>\n        <h2 id='target' className={classes.welcomeHeader}>Почему именно мы?</h2>\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='like'\n              color='#f4f2fc'\n              value='Подборка и продажа земельных активов от собственника без комиссии.'\n            /> \n          </Grid>\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='marketing'\n              color='#f2feed'\n              value='Более 2500 земельных участков в земельной базе.'\n            />\n          </Grid>\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='shield'\n              color='#fef0ed'\n              value='Юридическая чистота сделки от экспертов с опытом более 10 лет.'\n            />\n          </Grid>\n          <Grid item xs={12} md={6} >\n            <IconBlock\n              iconName='certificate'\n              color='#ecfbff'\n              value='Гарантия на строительство и подбор участка.'\n            />\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Container maxWidth='lg' >\n        <div className={classes.test}>\n          <div className={classes.testIn}>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\n              <Grid item xs={12} md={6} >\n                <h3 ref={root}>Заполните форму и получите полный каталог поселков на почту и скидку 3%</h3>\n                <center>\n                  <Box m={2}>\n                    <button className='main-button' onClick={()=>{window.open('https://mrqz.me/zagzem', '_blank')}}>\n                      Пройти тест\n                    </button>\n                  </Box>\n                </center>\n              </Grid>\n              <Grid item xs={12} md={6} >\n                <Link\n                    to='/villages'\n                >\n                <div className={classes.testFon} />\n                </Link>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </Container>\n\n      <Container maxWidth='lg' >\n        <ContactForm />\n      </Container>\n\n      <Container maxWidth='lg' >\n        <Chooser />\n      </Container>\n    </>\n  )\n}\n\nexport default WelcomePage\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\contact\\index.js",["255"],"import React from 'react'\nimport ContactForm from '../../components/ContactForm'\nimport Container from '@material-ui/core/Container'\nimport Chooser from \"../../components/Chooser\";\nimport Filter from \"../../components/Filter\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport CallbackForm from \"../../components/CallbackForm\";\nimport CallbackFormContact from \"../../components/CallbackFormContact\";\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showFilter: false,\n    }\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  componentWillUnmount() {\n  }\n\n  setShowFilter = () => {\n    this.setState({ showFilter: true })\n  }\n\n  setHideFilter = () => {\n    this.setState({ showFilter: false })\n  }\n\n  render() {\n      console.log('contact')\n    return (\n      <Container maxWidth='lg'>\n        <CallbackFormContact />\n        {this.state.showFilter === true ? <Filter hidden={this.setHideFilter} expanded={true} /> : ''}\n        <div className='fullScreen'>\n          <ContactForm />\n        </div>\n        <Container maxWidth='lg' >\n          <Chooser />\n        </Container>\n        <div className='filter-button' onClick={this.setShowFilter}>\n          <h5 style={{position: 'absolute', top: '-30px'}}>Подобрать</h5>\n          <FilterListIcon style={{width:'55px',height:'55px',color:'#FFF'}} />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default ContactPage\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\SearchInput\\index.js",["256"],"import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport Fuse from 'fuse.js';\nimport {villages} from \"../../index\";\n// import villages from '../../villages'\n\nlet characters = villages.map(el =>({ ...el, keyFields: 'поселок ' + el.name}) )\n\nconst fuse = new Fuse(characters, {\n  keys: [\n    'keyFields'\n  ],\n  includeScore: true\n});\n\n\n// const results = fuse.search('мирный');\n// let filter = results.map(el => ({...el.item}))\n\n\nconst languages = [\n  {\n    name: 'Сказка-5',\n    uname: 'skazka-5',\n  },\n  {\n    name: 'Шелест',\n    uname: 'shelest',\n  },\n  {\n    name: 'Мирный',\n    uname: 'mirniy',\n  },\n  {\n    name: 'Хомутово',\n    uname: 'homutovo',\n  },\n  {\n    name: 'Адмиральский',\n    uname: 'admiralskiy',\n  },\n  {\n    name: 'Реки',\n    uname: 'reki',\n  },\n  {\n    name: 'Игнатово',\n    uname: 'ignatovo',\n  },\n  {\n    name: 'Черничное',\n    uname: 'chernichnoe',\n  },\n  {\n    name: 'Пушкино Лайф',\n    uname: 'pushkino-life',\n  },\n  {\n    name: 'Лисичкин Луг',\n    uname: 'lisichkin-lug',\n  },\n  {\n    name: 'Гжельские узоры',\n    uname: 'gjelskie-uzori',\n  },\n  {\n    name: 'Грильяж',\n    uname: 'grilyag',\n  },\n  {\n    name: 'Земляничная поляна',\n    uname: 'zemlynichnaya-polyana',\n  },\n  {\n    name: 'Ильинское ИЖС',\n    uname: 'ilinskoe-igs',\n  },\n  {\n    name: 'Лесная сказка',\n    uname: 'lesnaya-skazka',\n  },\n  {\n    name: 'Матчино лайф',\n    uname: 'matchino-life',\n  },\n  {\n    name: 'Матчино парк',\n    uname: 'matchino-park',\n  },\n  {\n    name: 'Рэд',\n    uname: 'red',\n  },\n  {\n    name: 'Сказка 6',\n    uname: 'skazka-6',\n  },\n  {\n    name: 'Сонинский лес',\n    uname: 'soninskiy-les',\n  },\n  {\n    name: 'Степыгино',\n    uname: 'stepigino',\n  },\n  {\n    name: 'Степыгино ИЖС',\n    uname: 'stepigino-igs',\n  },\n  {\n    name: 'Фаворит',\n    uname: 'favorit',\n  },\n  {\n    name: 'Фишер',\n    uname: 'fisher',\n  },\n  {\n    name: 'Шишкино-3',\n    uname: 'shishkino-3',\n  },\n  {\n    name: 'Новая Володарка',\n    uname: 'new-volodarka',\n  },\n  {\n    name: 'Русавкино-Заречное',\n    uname: 'rusavkino-zarechnoe',\n  },\n  {\n    name: 'Флора Парк',\n    uname: 'flora-park',\n  },\n  {\n    name: 'Удино Парк',\n    uname: 'udino-park',\n  },\n  {\n    name: 'Южный парк',\n    uname: 'south-park',\n  },\n  {\n    name: 'Ртищево',\n    uname: 'rtishevo',\n  },\n  {\n    name: 'Благовещенское',\n    uname: 'blagoveshenskoe',\n  },\n  {\n    name: 'Горки лайф',\n    uname: 'gorki-laif',\n  },\n  {\n    name: 'Маслово',\n    uname: 'maslovo',\n  },\n];\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  \n  if (escapedValue === '') {\n    return [];\n  }\n\n  // const regex = new RegExp('^' + escapedValue, 'i');\n\n  // const results = fuse.search(value);\n  // let filter = results.map(el => ({...el.item}))\n  // let filteredArrName = languages.filter(language => regex.test(language.name));\n\n  const results = fuse.search(escapedValue);\n  let filteredArrName = results.map(el => ({...el.item}))\n\n  return filteredArrName\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.name;\n}\n\nfunction renderSuggestion(suggestion) {\n  const uname = suggestion.uname\n  return (\n    <Link\n      to={`/village/${uname}`}\n    > \n    <span>{suggestion.name}</span>\n    </Link>\n  );\n}\n\nclass SearchInput extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };    \n  }\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n  \n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n      value: ''\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    const inputProps = {\n      placeholder: \"Поиск\",\n      value,\n      onChange: this.onChange,\n\n    };\n\n    return (\n          <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n          />\n    );\n  }\n}\n\nexport default SearchInput\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\InputPhone.js",["257"],"import React from \"react\"\nimport PhoneInput from 'react-phone-number-input'\n//import 'react-phone-number-input/style.css'\nimport './InputPhone.css'\nimport {makeStyles} from \"@material-ui/styles\";\n\nclass InputPhone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const value = this.props.value\n\n    return (\n      <React.Fragment>\n      <PhoneInput\n        defaultCountry=\"RU\"\n        placeholder=\"Введите номер телефона *\"\n        value={value}\n        onChange={this.props.setValue}\n        style={{\n          marginTop:'15px',\n          height:'4em',\n          // width: '365px'\n        }}\n      />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputPhone\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\StyledInput.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\api\\api.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\pages\\services\\SimpleAccordion.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Chooser.js",["258","259","260","261","262"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport AppState from '../AppState'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Grid from '@material-ui/core/Grid'\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { useFilterClicked } from '..';\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    backgroundColor: 'white'\n  },\n  tab: {\n    backgroundColor: 'white',\n    color: '#3c4b5a',\n    fontSize: '80%',\n    fontWeight: 'bold',\n  },\n  root: {\n    position: 'relative',\n    backgroundColor: 'white',\n    margin: '50px 0',\n    borderRadius: '15px',\n    overflow: 'hidden'\n  },\n  btn: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    textDecoration: 'none',\n    margin: '5px',\n    width: 'calc(100% - 10px)',\n    borderRadius: '15px',\n    border: '1px solid #f0f4f5',\n    background: '#f0f4f5',\n    color: '#3c4b5a',\n    textAlign: 'left',\n    padding: '17px 22px',\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#3c4b5a',\n      background: '#fff',\n    },\n  },\n  btnActive: {\n    color: '#53a321',\n    background: '#fff',\n    width: 'calc(100% - 10px)',\n    border: '1px solid #53a321',\n    alignItems: 'center',\n    textAlign: 'left',\n    padding: '17px 22px',\n    margin: '5px'\n  }\n}))\n\nconst arrRoadsChangeState = []\nconst arrAreasChangeState = []\nconst arrFromMkadChangeState = []\nconst arrPriceChangeState = []\n\nwindow.arr = arrRoadsChangeState\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction LinkTab(props) {\n  const classes = useStyles();\n  return (\n    <Tab\n      component=\"a\"\n      className={classes.tab}\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\n\nexport default function Chooser(props) {\n\n  const context = React.useContext(AppState)\n  const [value, setValue] = React.useState(0);\n\n  const [price, setPrice] = React.useState()\n  const [fromMkad, setFromMkad] = React.useState()\n\n  const [, setFilterClicked] = useFilterClicked()\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setPrice(context.selectedPriceFrom)\n\n    // console.log(context.selectedPriceFrom)\n    // console.log(context.selectedRoads)\n    // console.log(context.selectedAreas)\n    // console.log(context.selectedFromMkad)\n\n  }, [context.selectedPriceFrom, context.selectedRoads.length, context.selectedAreas.length, context.selectedFromMkad])\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const uniqRoads = context.uniqRoads\n  const uniqAreas = context.uniqAreas\n\n  const uniqDist = ['30', '40', '50', '60', '70', '80', '90', '150', '200']\n  const uniqPrices = [\n    'до 250 000 р.',\n    'до 500 000 р.',\n    'до 750 000 р.',\n    'до 1 000 000 р.',\n    'до 1 500 000 р.',\n    'до 3 000 000 р.',\n    'до 5 000 000 р.',\n    'до 10 000 000 р.',\n    'до 20 000 000 р.',\n  ]\n\n  const arrRoads = []\n  const arrAreas = []\n  const arrDist = []\n  const arrPrices = []\n\n  for (let i = 0; i < uniqRoads.length; i++) {\n    let roads = context.selectedRoads\n    let roadsBtn = context.selectedRoadsBtn\n    arrRoads.push(\n      <Grid key={'ARRROADS' + i} item xs={12} sm={6} md={4} lg={3}>\n\n        <button\n          disabled={false}\n          className={~roadsBtn.indexOf(uniqRoads[i]) ? classes.btnActive : classes.btn}\n          style={{ fontSize: '1.1rem' }}\n          onClick={(e) => {\n            context.selectOnlyRoadBtn(uniqRoads[i])\n            arrRoadsChangeState.push(uniqRoads[i])\n          }}\n        >{uniqRoads[i]}</button>\n      </Grid>\n    )\n  }\n\n  for (let i = 0; i < uniqAreas.length; i++) {\n    let areas = context.selectedAreas\n    let areasBtn = context.selectedAreasBtn\n    arrAreas.push(\n      <Grid key={'ARRAREAS' + i} item xs={12} sm={6} md={4} lg={3}>\n\n        <button\n          disabled={false}\n          className={~areasBtn.indexOf(uniqAreas[i]) ? classes.btnActive : classes.btn}\n          style={{ fontSize: '1.1rem' }}\n          onClick={(e) => {\n            // context.selectOnlyArea(uniqAreas[i])\n\n            context.selectOnlyAreaBtn(uniqAreas[i])\n            arrAreasChangeState.push(uniqAreas[i])\n          }}\n        >{uniqAreas[i]}</button>\n\n      </Grid>\n    )\n  }\n\n  for (let i = 0; i < uniqDist.length; i++) {\n    let dist = uniqDist[i].replace(/[^+\\d]/g, '') * 1\n\n    let distBtn = context.selectedFromMkadBtn\n\n    arrDist.push(\n      <Grid key={'ARRDIST' + i} item xs={12} sm={6} md={4} lg={3}>\n\n        <button\n          disabled={false}\n          className={dist === distBtn ? classes.btnActive : classes.btn}\n          style={{ fontSize: '1.1rem' }}\n          onClick={(e) => {\n            // context.selectOnlyDist(uniqDist[i])\n\n            context.selectOnlyFromMkadBtn(uniqDist[i])\n            arrFromMkadChangeState.push(uniqDist[i])\n          }}\n        >до {uniqDist[i]} км.</button>\n\n      </Grid>\n    )\n  }\n\n  for (let i = 0; i < uniqPrices.length; i++) {\n    let ctx2 = uniqPrices[i].replace(/[^+\\d]/g, '') * 1\n    let priceBtn = context.selectedPriceBtn\n\n    arrPrices.push(\n      <Grid key={'ARRPRICE' + i} item xs={12} sm={6} md={4} lg={3}>\n        <button\n          disabled={false}\n          className={ctx2 === priceBtn ? classes.btnActive : classes.btn}\n          style={{ fontSize: '1.1rem' }}\n          onClick={(e) => {\n            context.selectOnlyPriceBtn(uniqPrices[i])\n            arrPriceChangeState.push(uniqPrices[i])\n            // context.selectOnlyPrice(uniqPrices[i])\n          }\n\n          }\n        >Участок {uniqPrices[i]}</button>\n        {/*</Link>*/}\n      </Grid>\n    )\n  }\n\n\n\n  let setFilteredRoads = () => {\n    arrRoadsChangeState.map(el => context.selectOnlyRoad(el))\n    arrAreasChangeState.map(el => context.selectOnlyArea(el))\n    arrFromMkadChangeState.map(el => context.selectOnlyDist(el))\n    arrPriceChangeState.map(el => context.selectOnlyPrice(el))\n    props.render()\n\n    setFilterClicked(true)\n  }\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar color='inherit' position=\"static\" style={{ boxShadow: 'none', }}>\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n          className={classes.tabs}\n        >\n          <LinkTab label=\"Шоссе\" />\n          <LinkTab label=\"Районы\" />\n          <LinkTab label=\"от МКАД\" />\n          <LinkTab label=\"Цена\" />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <Grid container>\n          {arrRoads}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        <Grid container>\n          {arrAreas}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        <Grid container>\n          {arrDist}\n        </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={3}>\n        <Grid container>\n          {arrPrices}\n        </Grid>\n      </TabPanel>\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <Link\n          to='/villages'\n        >\n          <button className='main-button' onClick={setFilteredRoads}>\n            Показать\n          </button>\n        </Link>\n      </div>\n\n    </div>\n  );\n}\n\n\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ReviewCard.js",["263","264","265","266"],"/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from './IconButton'\nimport Carousel from 're-carousel'\nimport Grid from '@material-ui/core/Grid'\nimport Icons from './Icons'\nimport IndicatorDots from './IndicatorDots'\nimport AppState from \"../AppState\";\nimport LazyLoad from 'react-lazyload';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '15px',\n    border: '1px solid #eff3f4',\n    boxShadow: 'none',\n  },\n  img: {\n    width: '100%',\n    height: '250px',\n    [theme.breakpoints.up('lg')]: {\n      height: '250px'\n    },\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardSubHeader: {\n    height: '60px',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s opacity',\n    '&:hover': {\n      opacity: '.6',\n      transition: '.3s opacity',\n    }\n  },\n  cardPrice: {\n  },\n  infoBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '40px', \n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '45px',\n    top: '0',\n    width: 'calc(100% - 45px)',\n    height: '100%',\n  }\n}));\n\nconst ItemInfo = ({ icon, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoIcon}>\n        <Icons\n          name={icon}\n          color='#607D8B'\n          size={24}\n        />\n      </div>\n      <div className={classes.infoValue}>\n        <h5 className='light-text'>{value}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default function ReviewCard(props) {\n\n  const context = React.useContext(AppState)\n\n  const uid = props.uid\n  const type = props.type || ''\n  const bgs = props.bgs || []\n  const name = props.name || ''\n  const uname = props.uname || ''\n  const road = props.road || ''\n  const fromMkad = props.fromMkad || ''\n  const price = props.price || ''\n  const leftLands = props.leftLands || ''\n  const communications = props.communications || {}\n  const priceLands = props.priceLands || []\n  const sideOfMkad = props.sideOfMkad || ''\n  const permittedUse = props.permittedUse || 2\n\n  const classes = useStyles()\n\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \n\n  const slides = []\n\n  for (let i=0;i<bgs.length;i++) {\n    slides.push(\n      <LazyLoad>\n        <img\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            objectFit: 'cover'\n          }}\n        />\n      </LazyLoad>\n    )\n  }\n\n  let kk = []\n  const infoList = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n\n  // Communications\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || ''\n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          value={'Электричество '+value}\n          size='small'\n          tooltip='Электрификация'\n        />\n      )\n    }\n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'dfgh'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Водоснабжение'\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Газификация'\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Ограждение'\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Детская площадка'\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Освещение улиц'\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Спортивная площадка'\n\n        />\n      )\n    }\n  }\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.img}>\n        <Carousel loop auto widgets={[IndicatorDots]}>\n          {slides}\n        </Carousel>\n      </div>\n\n      <Link\n          to={`/village/${uname}`}\n\n      >\n\n      <CardContent className={classes.cardContent}>\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\n        <ItemInfo\n          icon='compass'\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\n        />\n        <ItemInfo\n          icon='car'\n          value={`${road}`}\n        />\n        <ItemInfo\n          icon='price'\n          value={`Сотка от ${price} р.`}\n        />\n        <ItemInfo\n          icon='mapPlaces'\n          value={`Участки от ${spaceInNumber(priceLands[0]) } р.`}\n        />\n        <ItemInfo\n          icon='flag'\n          value={`В продаже ${leftLands} шт.`}\n        />\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\n          {infoList}\n        </Grid>\n        <center>\n          <button className='main-button'>Подробнее</button>\n        </center>\n      </CardContent>\n      </Link>\n    </Card>\n  );\n}\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackFormPopUp.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackFormContact.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ContactForm.js",["267"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  mapSection: {\n    position:'relative',\n    width: '100%',\n    background: '#fff',\n    minHeight: '500px',\n    overflow: 'hidden',\n  },\n  mapFrame: {\n    height: '750px',\n    // marginTop: '140px',\n    borderRadius: '15px',\n    overflow: 'hidden',\n    [theme.breakpoints.up('sm')]: {\n      marginTop: '0px',\n      height: '500px',\n    }\n  },\n  text: {\n    color: '#3c4b5a',\n  },\n  textDescr: {\n    color: '#3c4b5a',\n  },\n  textValue: {\n    fontSize: '0.8rem',\n    [theme.breakpoints.up('sm')]: {\n      color: '#3c4b5a',\n      fontSize: '1.0rem',\n    }\n  },\n  infoMapBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '60px',\n    margin: '0px 0px 30px 0px',\n  },\n  mapInfo: {\n    position: 'absolute',\n    padding: '30px 15px',\n    margin: '40px 0px',\n    top: '15px',\n    borderRadius: '15px',\n    background: '#fff',\n    border: '1px solid #eff3f4',\n\n  },\n}))\n\nconst ItemMapInfo = (props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoMapBlock}>\n      <h5 style={{margin:'5px 0'}} className={classes.text}>\n        {props.name}\n      </h5>\n      <h4 style={{margin:'0'}} className={classes.textValue}>\n        {props.value}\n      </h4>\n      <h4 style={{margin:'0'}} className={classes.textValue}>\n        {props.dopValue}\n      </h4>\n    </div>\n  )\n}\n\nconst ContactForm = (props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.mapSection}>\n        <Grid container>\n          <iframe title='qw12' src=\"https://yandex.ru/map-widget/v1/?um=constructor%3Aeea71e7b41c1a53dc55fc01665165149f7ea1b10e1f8a05b47a879cb748c829d&amp;source=constructor\" width=\"100%\" height=\"100%\" frameBorder=\"0\" className={classes.mapFrame}></iframe>\n          <Container maxWidth='lg'>\n          <Grid item xs={12} md={4}>\n            <div className={classes.mapInfo}>\n              <ItemMapInfo\n                name='Адрес:'\n                value='Ленинский просп., 30А, г. Москва'\n                dopValue='Проспект Маркса, д. 14, г. Обнинск'\n              />\n              <ItemMapInfo\n                name='Телефон:'\n                value='+7 (499) 938-92-28'\n              />\n              <ItemMapInfo\n                name='Почта:'\n                value='sales@zagzem.ru'\n              />\n              <ItemMapInfo\n                name='Время работы:'\n                value='пн-вс 09:00-21:00'\n              />\n            </div>\n          </Grid>\n          </Container>\n        </Grid>\n      </div>\n  )\n}\n\nexport default ContactForm\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\SlickSlider.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IconBlock.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Page.js",["268","269","270","271"],"import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TargetForm from './TargetForm'\nimport IconButton from './IconButton'\nimport IconButtonTC from \"./IconButtonTC\";\nimport { MyMap } from './MyMap'\nimport IndicatorDots from './IndicatorDots'\nimport CarouselButtons from './CarouselButtons'\nimport Carousel from 're-carousel'\nimport Dialog from '@material-ui/core/Dialog'\nimport CallbackPlanForm from './CallbackPlanForm'\n\nimport testImage from '../img/images/villaLabel.png'\nimport CallbackFormPopUp from \"./CallbackFormPopUp\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {useLocation} from \"react-router-dom\";\n\nimport ImageZoom from \"react-image-zooom\";\nimport { isImage } from \"../helpers/isImage\";\n\nconst useStyles = makeStyles((theme) => ({\n    name: {\n        transition: 'all 0.3s ease-out',\n\n    },\n    header: {\n        width: '100%',\n        margin: '0 0px 40px 0px',\n    },\n    subInfo: {\n        width: '100%',\n        margin: '30px 0px 15px 0px',\n        padding: '5px',\n        borderRadius: '15px',\n    },\n    btns: {\n        margin: '30px 0px 30px 0px',\n    },\n    descrBlock: {\n        margin: '30px 0px 30px 0px',\n        background: 'none',\n        borderRadius: '15px',\n    },\n    descrImg: {\n        width: '100%',\n        height: '100%',\n        backgroundImage: `url(${testImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'contain'\n    },\n    targetBlock: {\n        margin: '30px 0px 30px 0px',\n        background: 'none',\n        borderRadius: '15px',\n    },\n    mapSection: {\n        position:'relative',\n        margin: '30px 0px 30px 0px',\n        background: '#fff',\n        borderRadius: '15px',\n        minHeight: '780px',\n        overflow: 'hidden',\n        [theme.breakpoints.up('md')]: {\n            minHeight: '460px',\n        },\n    },\n    btn: (props => ({\n        background: '#FFF',\n        color: '#0197fd',\n        transition: 'all ease .45s',\n        cursor: 'pointer',\n        borderRadius: '15px',\n        boxShadow: 'inset 0 0 0 1px #0197fd',\n        padding: '20px 20px',\n        margin: '5px 15px',\n        textAlign: 'center',\n        '&:hover': {\n            background: '#0197fd',\n            color: '#fff',\n        },\n    })),\n    infoMapBlock: {\n        position: 'relative',\n        width: 'calc(100% - 10px)',\n        height: '60px',\n        margin: '0px 0px 30px 10px',\n    },\n    infoBlock: {\n        position: 'relative',\n        width: 'calc(100% - 10px)',\n        height: '60px',\n        background: '#fff',\n        borderRadius: '15px',\n        margin: '5px',\n    },\n    infoIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        left: '10px',\n        top: '0',\n        width: '40px',\n        height: '100%',\n    },\n    infoValue: {\n        display: 'flex',\n        alignItems: 'center',\n        position: 'absolute',\n        left: '60px',\n        top: '0',\n        width: 'calc(100% - 70px)',\n        height: '100%',\n    },\n    wrapperInfo: {\n        marginLeft: '0px',\n        borderRadius: '15px',\n        background: '#fff',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: '15px',\n        }\n    },\n    mapInfo: {\n        position: 'absolute',\n        padding: '30px 15px',\n        margin: '15px',\n        borderRadius: '15px',\n        background: '#fff',\n    },\n    descrSection: {\n        width: 'calc(100% - 30px)',\n        margin: '15px',\n        minHeight: '300px',\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '40px 25px',\n    },\n    genplan: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        padding: '10px',\n    },\n    iframe: {\n        width: \"100%\",\n        height: \"30rem\",\n        borderRadius: \"5px\",\n        borderWidth: '0',\n    }\n}));\n\nconst ItemMapInfo = ({ name, value }) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.infoMapBlock}>\n            <h5 style={{margin:'5px 0'}}>{name}</h5>\n            <h4 style={{margin:'0'}}>{value}</h4>\n        </div>\n    )\n}\n\nexport default function Page (props){\n    console.log('newPage render',props.village)\n    const village = props.village\n    const [showGenplan, setShowGenplan] = React.useState(false)\n    const [showSendPlan, setShowSendPlan] = React.useState(false)\n    const [showForm, setShowForm] = React.useState(false)\n    // console.log('village.permittedUse', village.permittedUse)\n\n    const waysToGetList = []\n    const communications = village.communications\n    const nature = village.nature\n    const infrastructure = village.infrastructure\n    const waysToGet = village.waysToGet\n    const descr = village.descr\n    const coords = village.coords || [0,0]\n    const bgs = village.bgs\n    const plan = village.plan\n    const planPartners = village.plan_partners\n    const safety = village.safety\n    const roadIn = village.roadIn\n    const roadTo = village.roadTo\n\n\n    const planImg = plan || planPartners\n\n    const isImageData = isImage(planImg)\n\n    const classes = useStyles({planImg})\n\n    let infoCoords = []\n    if (coords) {\n        infoCoords = coords\n    }\n\n    const infoDescr = []\n    if (descr) {\n        for (let i=0;i<descr.length;i++) {\n            infoDescr.push(\n                <p key={'dscr'+i} className={classes.textDescr}>\n                    {descr[i]}\n                </p>\n            )\n        }\n    }\n\n    let kk = []\n    let nn = []\n    let rr = []\n    let ww = []\n    if (communications) {\n        kk = Object.keys(communications)\n    }\n    if (nature) {\n        nn = Object.keys(nature)\n    }\n    if (infrastructure) {\n        rr = Object.keys(infrastructure)\n    }\n    if (waysToGet) {\n        ww = Object.keys(waysToGet)\n    }\n\n    for (let i=0;i<ww.length;i++) {\n        const key = ww[i]\n        const value = waysToGet[key] || ''\n        if (key === '1') {\n            waysToGetList.push(\n                <Grid key={key+i+'wtg'} item xs={12} md={4} >\n                    <IconButtonTC\n                        iconName='car'\n                        color='#0197fd'\n                        selected={true}\n                        value={'На автомобиле: ' + value}\n                    />\n                </Grid>\n            )\n        }\n        if (key === '2') {\n            waysToGetList.push(\n                <Grid key={key+i+'wtg'} item xs={12} md={4}>\n                    <IconButtonTC\n                        iconName='bus'\n                        color='#8a6eac'\n                        selected={true}\n                        value={'На общественном транспорте: ' + value}\n                    />\n                </Grid>\n            )\n        }\n        if (key === '3') {\n            waysToGetList.push(\n                <Grid key={key+i+'wtg'} item xs={12} md={4}>\n                    <IconButtonTC\n                        iconName='train'\n                        color='#06b26b'\n                        selected={true}\n                        value={'На электричке: ' + value}\n                    />\n                </Grid>\n            )\n        }\n    }\n\n    const infoList = []\n    const infoListInfrastructure = []\n    const infoListNature = []\n    const infoListRoad = []\n    const infoListSafety = []\n\n    infoList.push(\n        <IconButton\n            key='cSXmmn'\n            iconName='mapPlace'\n            color='#0197fd'\n            selected={true}\n            value={village.permittedUse[0] === '1' ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\n        />\n    )\n\n    if (roadTo === 1) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_asphalt'\n                iconName='asphalt'\n                color='#6aa3a5'\n                selected={true}\n                handler={()=>{}}\n                value='До поселка асфальтированная дорога'\n            />\n        )\n    }\n    if (roadTo === 3) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_asphaltKroshka'\n                iconName='asphaltKroshka'\n                color='#4a7aff'\n                selected={true}\n                value='До поселка дорога из асф.крошки'\n            />\n        )\n    }\n    if (roadTo === 6) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_betonPlit'\n                iconName='betonPlit'\n                color='#ff5b5a'\n                selected={true}\n                value='До поселка дорога из бетонных плит'\n            />\n        )\n    }\n    if (roadTo === 5) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_5'\n                iconName='bitiyKirpich'\n                color='#ffce01'\n                selected={true}\n                value='До поселка дорога из битого кирпича'\n            />\n        )\n    }\n    if (roadTo === 4) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_4'\n                iconName='gruntovka'\n                color='#06b26b'\n                selected={true}\n                value='До поселка грунтовая дорога'\n            />\n        )\n    }\n    if (roadTo === 2) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_2'\n                iconName='sheben'\n                color='#8a6eac'\n                selected={true}\n                value='До поселка дорога из щебня'\n            />\n        )\n    }\n\n    if (roadIn === 1) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_1'\n                iconName='asphalt'\n                color='#6aa3a5'\n                selected={true}\n                value='В поселке асфальтированная дорога'\n            />\n        )\n    }\n    if (roadIn === 3) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_3'\n                iconName='asphaltKroshka'\n                color='#4a7aff'\n                selected={true}\n                value='В поселке дорога из асф. крошки'\n            />\n        )\n    }\n    if (roadIn === 6) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_6'\n                iconName='betonPlit'\n                color='#ff5b5a'\n                selected={true}\n                value='В поселке дорога из бетонных плит'\n            />\n        )\n    }\n    if (roadIn === 5) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_5'\n                iconName='bitiyKirpich'\n                color='#ffce01'\n                selected={true}\n                value='В поселке дорога из битого кирпича'\n            />\n        )\n    }\n    if (roadIn === 4) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_4'\n                iconName='gruntovka'\n                color='#06b26b'\n                selected={true}\n                value='В поселке грунтовая дорога'\n            />\n        )\n    }\n    if (roadIn === 2) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_2'\n                iconName='sheben'\n                color='#8a6eac'\n                selected={true}\n                value='В поселке дорога из щебня'\n            />\n        )\n    }\n\n    for (let i=0;i<kk.length;i++) {\n        const key = kk[i]\n        const value = communications[key] || ''\n        if (key === '1') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='svet'\n                    color='#ffce01'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Электрофикация '+value}\n                />\n            )\n        }\n        if (key === '2') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='water'\n                    color='#4a7aff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '3') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='gas'\n                    color='#ff5b5a'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '4') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='checkpoint'\n                    color='#ff5acc'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '5') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='playground'\n                    color='#5a5fff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '6') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='lighting'\n                    color='#5abbff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '7') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='sportsGround'\n                    color='#5aff7d'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '8') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='canalization'\n                    color='#ff9e5a'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n    }\n\n    for (let i=0;i<rr.length;i++) {\n        const key = rr[i]\n        const value = infrastructure[key] || ''\n        if (key === '1') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='cart'\n                    color='#8a6eac'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Продукты в '+value}\n                />\n            )\n        }\n        if (key === '3') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='school'\n                    color='#f7173a'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Школа в '+value}\n                />\n            )\n        }\n        if (key === '4') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='detsad'\n                    color='#4a7aff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Детский сад в '+value}\n                />\n            )\n        }\n        if (key === '5') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='hospital'\n                    color='#06b26b'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Больница в '+value}\n                />\n            )\n        }\n    }\n\n    if (safety) {\n        for (let i=0;i<safety.length;i++) {\n            const key = safety[i]\n            if (key === '1') {\n                infoListSafety.push(\n                    <IconButton\n                        key={key+'sasc'}\n                        iconName='zabor'\n                        color='#6aa3a5'\n                        selected={true}\n                        handler={()=>{}}\n                        value='Поселок огорожен'\n                    />\n                )\n            }\n            if (key === '2') {\n                infoListSafety.push(\n                    <IconButton\n                        key={key+'sasc'}\n                        iconName='security'\n                        color='#ff5b5a'\n                        selected={true}\n                        handler={()=>{}}\n                        value='Есть охрана'\n                    />\n                )\n            }\n        }\n    }\n\n    for (let i=0;i<nn.length;i++) {\n        const key = nn[i]\n        const value = nature[key] || ''\n        if (key === '1') {\n            infoListNature.push(\n                <IconButton\n                    key={key+i+'ntr'}\n                    iconName='vodoem'\n                    color='#5277f5'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '2') {\n            infoListNature.push(\n                <IconButton\n                    key={key+i+'ntr'}\n                    iconName='tree'\n                    color='#06b26b'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '3') {\n            infoListNature.push(\n                <IconButton\n                    key={key+i+'ntr'}\n                    iconName='tree'\n                    color='#ffce01'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n    }\n\n    let nearSettlementName = ''\n    let nearSettlementDist = ''\n    let nearTownName = ''\n    let nearTownDist = ''\n    let nearRailwayName = ''\n    let nearRailwayDist = ''\n    if (village.nearSettlement) {\n        nearSettlementName = village.nearSettlement.name\n        nearSettlementDist = village.nearSettlement.distance\n    }\n    if (village.nearTown) {\n        nearTownName = village.nearTown.name\n        nearTownDist = village.nearTown.distance\n    }\n    if (village.nearRailway) {\n        nearRailwayName = village.nearRailway.name\n        nearRailwayDist = village.nearRailway.distance\n    }\n\n    let rosreestrLink = ''\n    if (village.rosreestr) {\n        rosreestrLink = village.rosreestr\n    }\n\n    const slides = []\n\n    if (bgs){\n        for (let i=0;i<bgs.length;i++) {\n            slides.push(\n                <div\n                    key={'bgil'+i}\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                        backgroundImage: `url(${bgs[i]})`,\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundSize: 'cover',\n                    }}\n                />\n            )\n        }\n    }\n\n    useEffect(()=>{\n        document.getElementById('description-page').innerHTML=`${infoDescr[0].props.children}`\n    },[props])\n\n    const {pathname} = useLocation()\n    console.log('pathnew', pathname)\n    const [url, setUrl] = useState('');\n\n    useEffect(()  => {\n        setUrl(pathname)\n    }, [pathname])\n    const Transition = React.forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"up\" ref={ref} {...props} />;\n    });\n\n    function spaceInNumber(n) {\n        n += \"\";\n        n = new Array(4 - n.length % 3).join(\"U\") + n;\n        return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n    }\n\n    return (\n        <>\n            <Dialog\n                open={showForm}\n                fullWidth={true}\n                maxWidth='sm'\n                // TransitionComponent={Transition}\n                onClose={() => {\n                    setShowForm(false)\n                }}\n            >\n                <CallbackFormPopUp />\n            </Dialog>\n\n            <Container maxWidth='lg'>\n                <div className={classes.header}>\n                    <Grid container alignItems='center'>\n                        <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\n                    </Grid>\n                    <Grid container alignItems='center'>\n                        <Grid item xs={12} md={4}>\n                            <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\n                            <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\n                            <h4 style={{padding:'10px 0'}}>{village.road}</h4>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\n                            <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{spaceInNumber(village.price)}</span> руб/сотка</h4>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <Grid container>\n                    <Grid item xs={12} md={8}>\n                        <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\n                            <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\n                                {slides}\n                            </Carousel>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <div className={classes.wrapperInfo}>\n                            {infoList}\n                        </div>\n                        <div style={{margin:'30px 15px'}}>\n                            <center>\n\n\n                                <button onClick={()=> setShowForm(true)} className='main-button'>\n                                    Записаться на просмотр\n                                </button>\n\n\n                            </center>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <div className={classes.btns}>\n                    <Grid container>\n                        <Grid item xs={12} md={4}>\n                            {\n                                planImg && <button className='main-button' style={{\n                                    width: '94%',\n                                    fontSize: '99%',\n                                    fontWeight: 'bold',\n                                    margin: '10px 5%'\n                                }}\n                                                   onClick={() => setShowGenplan(true)}\n                                >\n                                    Планировка поселка\n                                </button>\n                            }\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                                    onClick={()=>{window.open(rosreestrLink, '_blank')}}\n                            >\n                                Кадастровая карта\n                            </button>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                                    onClick={()=>setShowSendPlan(true)}\n                            >\n                                Отправить планировку на email\n                            </button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        <div className={classes.wrapperInfo}>\n                            <h4 style={{padding:'15px'}}>Дороги</h4>\n                            {infoListRoad}\n                        </div>\n                    </Grid>\n                    {infoListSafety.length < 1 ? '' :\n                        <Grid item xs={12} md={6}>\n                            <div className={classes.wrapperInfo}>\n                                <h4 style={{padding:'15px'}}>Безопасность</h4>\n                                {infoListSafety}\n                            </div>\n                        </Grid>\n                    }\n                    <Grid item xs={12} md={6}>\n                        <div className={classes.wrapperInfo}>\n                            <h4 style={{padding:'15px'}}>Природа</h4>\n                            {infoListNature}\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <div className={classes.wrapperInfo}>\n                            <h4 style={{padding:'15px'}}>Инфраструктура</h4>\n                            {infoListInfrastructure}\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <div className={classes.descrBlock}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <div className={classes.descrImg} />\n                        </Grid>\n                        <Grid item xs={12} md={7}>\n                            <div className={classes.descrSection}>\n                                <span id={'description-page'}> </span>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\n                <div className={classes.mapSection}>\n                    <Grid container>\n                        <MyMap\n                            centerMap={infoCoords}\n                        />\n                        <Grid item xs={12} md={4}>\n                            <div className={classes.mapInfo}>\n                                <ItemMapInfo\n                                    name='Ближайший населенный пункт'\n                                    value={nearSettlementName + ' - ' + nearSettlementDist}\n                                />\n                                <ItemMapInfo\n                                    name='Ближайший город'\n                                    value={nearTownName + ' - ' + nearTownDist}\n                                />\n                                <ItemMapInfo\n                                    name='Ближайшая ж/д станция'\n                                    value={nearRailwayName + ' - ' + nearRailwayDist}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg' style={{margin: '40px auto'}}>\n                <div className={classes.subInfo}>\n                    <Grid container justifyContent='space-around'>\n                        {waysToGetList}\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <div id='target-block' className={classes.targetBlock}>\n                    <TargetForm selectedVillage={village.name} />\n                </div>\n            </Container>\n\n            {\n\n                planImg && <Dialog\n                    fullWidth={true}\n                    maxWidth='xl'\n                    open={showGenplan}\n                    onClose={() => setShowGenplan(false)}\n                >\n\n                    <div className={classes.genplan}>\n                        {\n                            isImageData\n                                ? <ImageZoom src={planImg} alt=\"Genplan village\" zoom={200}/>\n                                : <iframe className={classes.iframe} src={planImg}/>\n                        }\n                    </div>\n                </Dialog>\n\n            }\n\n            <Dialog\n                fullWidth={true}\n                maxWidth='sm'\n                open={showSendPlan}\n                onClose={()=>setShowSendPlan(false)}\n            >\n                <CallbackPlanForm village={village.name}/>\n            </Dialog>\n        </>\n    )\n}\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\SimilarVillages.js",["272","273","274","275","276","277"],"import React from 'react';\nimport AppState from '../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport ReviewCard from './ReviewCard'\n\nconst postsPerPage = 3;\nlet arrayForHoldingPosts = []\n\nconst SimilarVillages = ({rerender, uid, road, price, ...props}) => {\n  const context = React.useContext(AppState)\n\n  const [postsToShow, setPostsToShow] = React.useState([]);\n  const [next, setNext] = React.useState(3);\n\n  // const loopWithSlice = (start, end) => {\n  //   const slicedPosts = ReviewCard.slice(start, end);\n  //   arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\n  //   setPostsToShow(arrayForHoldingPosts);\n  // };\n\n  // const filteredVillages = context.filteredVillages\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price >= (price - price*0.2) && el.price <= (price + price*0.2))\n\n\n  const newArr = []\n  for (let i=0;i<filteredVillages.length;i++) {\n    if (newArr.length < 3) {\n    if (uid !== filteredVillages[i].uid) {\n      newArr.push(\n        <Grid item\n          key={'IpL'+filteredVillages[i].uname+i}\n          xs={12}\n          sm={6}\n          md={4}\n        >\n          <ReviewCard\n            type={filteredVillages[i].type}\n            uname={filteredVillages[i].uname}\n            name={filteredVillages[i].name}\n            bgs={filteredVillages[i].bgs}\n            road={filteredVillages[i].road}\n            fromMkad={filteredVillages[i].fromMkad}\n            price={filteredVillages[i].price}\n            leftLands={filteredVillages[i].leftLands}\n            priceLands={filteredVillages[i].priceLands}\n            sideOfMkad={filteredVillages[i].sideOfMkad}\n            communications={filteredVillages[i].communications}\n\n          />\n        </Grid>\n      )\n    }\n    }\n  }\n  // eslint-disable-next-line no-lone-blocks\n  {if (filteredVillages.length < 2) {\n    return ''\n  }else {\n    return (\n        <>\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\n          <Grid container spacing={3} style={{justifyContent:'center'}}>\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\n            {newArr}\n            {/*</div>*/}\n          </Grid>\n        </>\n\n    )\n  }}\n\n}\n\nexport default SimilarVillages\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\index.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\index.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IconButton.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IndicatorDots.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\utils.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\helpers\\isImage.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CallbackPlanForm.js",["278","279","280"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport {sendPlanAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        padding: '15px',\n        borderRadius: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    btnTarget: {\n        margin: '10px 0px 0px 0px',\n    },\n    bodyText: {\n        fontFamily: 'FiraMedium',\n        padding: '15px',\n        fontSize: '2rem',\n        color: '#263238',\n        lineHeight: '110%',\n    },\n    textarea: {\n        width: '100%',\n        borderRadius: '15px',\n        background: '#f9f9f9',\n        color: '#191a1d',\n        cursor: 'pointer',\n        border: '2px solid #e2e2e2',\n        fontFamily: 'FiraLight',\n        fontSize: '1.25rem',\n        marginTop: '15px',\n        outline: '0',\n        padding: '15px'\n    }\n}))\n\nconst CallbackPlanForm = (props) => {\n    const village = props.village\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const classes = useStyles({})\n\n    const submit = () => {\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n\n        if (x) {\n            sendPlanAmoCRM(email, village)\n                .finally(()=>{\n                    setEmail('')\n                    setSending(true)\n                })\n        } else {\n            alert('Введите корректный адрес почты')\n        }\n\n\n    }\n\n    if (sending) {\n        return (\n            <div className={classes.root}>\n                <Grid container justifyContent='center' alignItems='center'>\n                    <Typography align='center' className={classes.bodyText}>\n                        Планировка поселка {village} отправлена на ваш email\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={classes.bodyForm}>\n                            <Box my={2} mx={4}>\n                                <center>\n                                    <h3>Планировка поселка {village}</h3>\n                                </center>\n                            </Box>\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Отправить\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default CallbackPlanForm \n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CarouselButtons.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\IconButtonTC.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\TargetForm.js",["281","282","283"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {sendMessageAmoCRM} from \"../api/api\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '15px',\n    },\n    btnTarget: {\n        margin: '15px 0px 0px 0px',\n    },\n    bodyText: {\n        color: '#3c4b5a',\n    }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TargetForm = (props) => {\n    const selectedVillage = props.selectedVillage\n    const [phone, setPhone] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const apiUrl = 'https://zagzem.ru/api/'\n\n    const classes = useStyles({})\n\n    const changePhone = val => {\n        setPhone(val)\n    }\n\n    const checkForm = () => {\n        if (phone && isValidPhoneNumber(phone)) {\n            const phoneNumber = parsePhoneNumber(phone)\n            if (!phoneNumber) {\n                return false\n            }\n        }\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n            return false\n        }\n        return true\n    }\n\n    // const submit = async() => {\n    //   const check = await checkForm()\n    //   if (check) {\n    //     const options = {}\n    //     const body = { name: name, phone: phone, email: email}\n    //     options.method = 'POST'\n    //     options.headers = { 'Content-Type': 'application/json'}\n    //     options.body = JSON.stringify(body)\n    //     try {\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\n    //       if (res.status === 200) {\n    //         const result = await res.json()\n    //         if (result === null) {\n    //           alert('BAD JSON')\n    //           return false\n    //         }\n    //         setPhone('')\n    //         setName('')\n    //         setEmail('')\n    //         setSending(true)\n    //         alert('Submit Success!')\n    //       }\n    //     } catch(e) {\n    //       console.log('Fetch error: ', e)\n    //       return false\n    //     }\n    //   } else {\n    //     alert('Введите ваш номер телефона')\n    //   }\n    // }\n\n    const submit = () => {\n\n        console.log('submit, phone', phone)\n\n        if (name && email) {\n            if (isValidPhoneNumber(phone)) {\n                const phoneNumber = parsePhoneNumber(phone)\n                if (phoneNumber) {\n                    console.log('submit, phone valid')\n\n                    sendMessageAmoCRM(name, phone, email)\n                        .then(res => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                        .catch(e => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                }\n            } else {\n                alert('Введите правильный номер телефона')\n                return\n            }\n        } else {\n            alert('Заполните обязательные поля')\n            return\n        }\n        // if (isValidPhoneNumber(phone)) {\n        //   const phoneNumber = parsePhoneNumber(phone)\n        //   debugger\n        //   if (phoneNumber) {\n        //     console.log('submit, phone valid')\n        //   } else {\n        //     alert('Введите правильный номер телефона')\n        //     return\n        //   }\n        // } else {\n        //   alert('Введите правильный номер телефона')\n        //   return\n        // }\n\n        console.log('submit, name', name)\n        console.log('submit, email', email)\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n        }\n\n        // setPhone('')\n        // setName('')\n        // setEmail('')\n        // setSending(true)\n    }\n\n    if (sending) {\n        return (\n            <Dialog\n                open={sending}\n                fullWidth={true}\n                maxWidth='sm'\n                TransitionComponent={Transition}\n                onClose={() => setSending(false)}\n            >\n                <div className={classes.root}>\n                    <Grid container justifyContent='center' alignItems='center'>\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\n                            свяжется.</h3>\n                    </Grid>\n                </div>\n            </Dialog>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={7} className={classes.body}>\n                        <center>\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\n                        </center>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <div className={classes.bodyForm}>\n                            <StyledInput\n                                placeholder='Как вас зовут?'\n                                handler={(e) => setName(e.target.value)}\n                                value={name}\n                                type='text'\n                            />\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <InputPhone\n                                value={phone}\n                                setValue={changePhone}\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Записаться на просмотр\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default TargetForm\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\MyMap.jsx",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\Filter.js",["284","285"],"import React, { useState, useContext, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/styles'\nimport { Link } from 'react-router-dom'\nimport AppState from '../../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport Dialog from '@material-ui/core/Dialog';\nimport Box from '@material-ui/core/Box'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//import ExpandLessIcon from '@material-ui/icons/ExpandLess';\n//import ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport MapIcon from '@material-ui/icons/Map';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport CloseIcon from '@material-ui/icons/Close';\n//import DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\n\nimport MultiSelect from './MultiSelect'\nimport SingleSelect from './SingleSelect'\nimport FilterMap from './FilterMap'\nimport IconButton from '../IconButton'\nimport CheckBox from '../CheckBox'\nimport { useFilterClicked } from '../..'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    borderRadius: '15px',\n    overflow: 'hidden'\n  },\n  bg: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    background: '#fff',\n    opacity: '0.8',\n    zIndex: '10',\n  },\n  fg: {\n    position: 'relative',\n    zIndex: '20',\n  },\n  expandedBody: {\n    width: '100%',\n    margin: '15px',\n    background: '#eff3f4',\n    borderRadius: '15px',\n  },\n  expandButton: {\n  },\n  block: {\n    position: 'relative',\n    overflow: 'hidden',\n    padding: '4px',\n    margin: '5px',\n    background: '#fff',\n    borderRadius: '15px',\n  },\n  itemFilter: {\n    width: 'calc(100% - 10px)',\n    margin: '5px',\n    padding: '0',\n  },\n  filterControl: {\n    position: 'relative',\n    width: '100%',\n    padding: '15px 0',\n  },\n  expandBtn: {\n    position: 'absolute',\n    width: '50px',\n    height: '50px',\n    right: '0',\n  },\n  rollBtn: {\n    position: 'absolute',\n    width: '50px',\n    height: '50px',\n    right: '0',\n  },\n  filterBtn: {\n    background: '#0197fd',\n    minWidth: '170px',\n    height: '50px',\n    margin: '5px',\n    borderRadius: '1000px',\n    display: 'flex',\n    alignItems: 'center',\n    color: '#fff',\n    justifyContent: 'center',\n    cursor: 'pointer',\n  },\n  blockHeader: {\n    padding: '15px 0px 0px 15px'\n  },\n  mapBackBtn: {\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    height: '60px',\n    width: '200px',\n    zIndex: '600',\n    background: '#fff',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    borderRadius: '0 0 15px 0',\n    borderRight: '1px solid #eff3f4',\n    borderBottom: '1px solid #eff3f4',\n  },\n  checkboxValue: {\n    display: 'inline-block',\n    padding: '0 15px 0 15px',\n    textAlign: 'center',\n  },\n  map: {\n    position: 'relative',\n    width: 'calc(100% - 30px)',\n    margin: '15px',\n    height: '460px',\n    borderRadius: '15px',\n    overflow: 'hidden',\n  },\n  closeMap: {\n    position: 'absolute',\n    right: '15px',\n    top: '15px',\n    width: '50px',\n    height: '50px',\n    zIndex: '500',\n    background: '#0056b3',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '25px',\n  },\n  verticalCenter: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nconst Filter = (props) => {\n\n  const context = useContext(AppState)\n\n  //  const hide = props.hide\n  const [expanded, setExpanded] = useState(props.expanded || false)\n  const [showMap, setShowMap] = useState(true)\n  const [filterClicked, setFilterClicked] = useFilterClicked()\n\n  const setHidden = () => {\n    if (props.hidden) {\n      props.hidden()\n    }\n  }\n\n  const change = React.useCallback(() => {\n    const changeMap = async () => {\n      await setShowMap(false)\n      await setShowMap(true)\n    }\n    if (showMap) {\n      changeMap()\n    }\n  }, [showMap])\n\n  React.useEffect(() => {\n    change()\n  }, [context.filteredVillages])\n\n  const classes = useStyles()\n\n  const uniqRoads = context.uniqRoads\n  const uniqAreas = context.uniqAreas\n  const selectedVillagesRoads = context.selectedVillageRoads\n  const selectedVillageTypes = context.selectedVillageTypes\n  const selectedCommunications = context.selectedCommunications\n  const selectedSafety = context.selectedSafety\n  const selectedWaysToGet = context.selectedWaysToGet\n  const selectedAreas = context.selectedAreas\n  const selectedRoads = context.selectedRoads\n\n  const valDist = []\n  valDist.push(context.selectedFromMkad)\n  valDist.push(context.selectedToMkad)\n\n  const valPrice = []\n  valPrice.push(context.selectedPriceFrom)\n  valPrice.push(context.selectedPriceTo)\n\n  const blockRoads = (\n    <Box m={1}>\n      <MultiSelect\n        data={uniqRoads}\n        selected={selectedRoads}\n        title='Шоссе'\n        handler={context.selectRoad}\n      />\n    </Box>\n  )\n\n  const blockAreas = (\n    <Box m={1}>\n      <MultiSelect\n        data={uniqAreas}\n        selected={selectedAreas}\n        title='Район'\n        handler={context.selectArea}\n      />\n    </Box>\n  )\n\n  const blockDistance = (\n    <Box m={1}>\n      <SingleSelect\n        data={[\n          'до 30 км.',\n          'до 40 км.',\n          'до 50 км.',\n          'до 60 км.',\n          'до 70 км.',\n          'до 80 км.',\n          'до 90 км.',\n          'до 150 км.',\n          'до 200 км.',\n        ]}\n        selected={`до ${context.selectedFromMkad} км.`}\n        title='Расстояние до МКАД'\n        handler={context.selectFromMkad}\n      />\n    </Box>\n  )\n\n  const blockPrice = (\n    <Box m={1}>\n      <SingleSelect\n        data={[\n          '250000',\n          '500000',\n          '750000',\n          '1000000',\n          '1500000',\n          '3000000',\n          '5000000',\n          '10000000',\n          '20000000',\n        ]}\n        selected={context.selectedPriceFrom}\n        title='Стоимость'\n        handler={context.selectPriceFrom}\n      />\n    </Box>\n  )\n\n  const communications = (\n    <div className={classes.block}>\n      <div className={classes.blockHeader}>\n        <h4>Коммуникации</h4>\n      </div>\n      <IconButton\n        iconName='svet'\n        color='#ffce01'\n        selected={selectedCommunications.indexOf(1) === -1 ? false : true}\n        handler={() => context.selectCommunication(1)}\n        value='Электричество'\n      />\n      <IconButton\n        iconName='water'\n        color='#4a7aff'\n        selected={selectedCommunications.indexOf(2) === -1 ? false : true}\n        handler={() => context.selectCommunication(2)}\n        value='Вода'\n      />\n      <IconButton\n        iconName='gas'\n        color='#ff5b5a'\n        selected={selectedCommunications.indexOf(3) === -1 ? false : true}\n        handler={() => context.selectCommunication(3)}\n        value='Газ'\n      />\n      <IconButton\n        iconName='checkpoint'\n        color='#ff5acc'\n        selected={selectedCommunications.indexOf(4) === -1 ? false : true}\n        handler={() => context.selectCommunication(4)}\n        value='КПП'\n      />\n      <IconButton\n        iconName='playground'\n        color='#5a5fff'\n        selected={selectedCommunications.indexOf(5) === -1 ? false : true}\n        handler={() => context.selectCommunication(5)}\n        value='Детская площадка'\n      />\n      <IconButton\n        iconName='lighting'\n        color='#5abbff'\n        selected={selectedCommunications.indexOf(6) === -1 ? false : true}\n        handler={() => context.selectCommunication(6)}\n        value='Освещение'\n      />\n      <IconButton\n        iconName='sportsGround'\n        color='#5aff7d'\n        selected={selectedCommunications.indexOf(7) === -1 ? false : true}\n        handler={() => context.selectCommunication(7)}\n        value='Спортивная площадка'\n      />\n      <IconButton\n        iconName='canalization'\n        color='#ff9e5a'\n        selected={selectedCommunications.indexOf(8) === -1 ? false : true}\n        handler={() => context.selectCommunication(8)}\n        value='Центральная канализация'\n      />\n    </div>\n  )\n\n  const roads = (\n    <div className={classes.block}>\n      <div className={classes.blockHeader}>\n        <h4>Дороги в поселке</h4>\n      </div>\n      <IconButton\n        iconName='asphalt'\n        color='#6aa3a5'\n        selected={selectedVillagesRoads.indexOf(1) === -1 ? false : true}\n        handler={() => context.selectVillageRoad(1)}\n        value='Асфальт'\n      />\n      <IconButton\n        iconName='asphaltKroshka'\n        color='#4a7aff'\n        selected={selectedVillagesRoads.indexOf(3) === -1 ? false : true}\n        handler={() => context.selectVillageRoad(3)}\n        value='Acф. крошка'\n      />\n      {/*<IconButton*/}\n      {/*  iconName='betonPlit'*/}\n      {/*  color='#ff5b5a'*/}\n      {/*  selected={selectedVillagesRoads.indexOf(6) === -1 ? false : true}*/}\n      {/*  handler={()=>context.selectVillageRoad(6)}*/}\n      {/*  value='Бетонные плиты'*/}\n      {/*/>*/}\n      {/*<IconButton*/}\n      {/*  iconName='bitiyKirpich'*/}\n      {/*  color='#ffce01'*/}\n      {/*  selected={selectedVillagesRoads.indexOf(5) === -1 ? false : true}*/}\n      {/*  handler={()=>context.selectVillageRoad(5)}*/}\n      {/*  value='Битый кирпич'*/}\n      {/*/>*/}\n      <IconButton\n        iconName='gruntovka'\n        color='#06b26b'\n        selected={selectedVillagesRoads.indexOf(4) === -1 ? false : true}\n        handler={() => context.selectVillageRoad(4)}\n        value='Грунтовая дорога'\n      />\n      <IconButton\n        iconName='sheben'\n        color='#8a6eac'\n        selected={selectedVillagesRoads.indexOf(2) === -1 ? false : true}\n        handler={() => context.selectVillageRoad(2)}\n        value='Щебень'\n      />\n    </div>\n  )\n\n  const safety = (\n    <div className={classes.block}>\n      <div className={classes.blockHeader}>\n        <h4>Безопасность</h4>\n      </div>\n      <IconButton\n        iconName='zabor'\n        color='#6aa3a5'\n        selected={selectedSafety.indexOf(1) === -1 ? false : true}\n        handler={() => context.selectSafety(1)}\n        value='Ограждение по периметру'\n      />\n      <IconButton\n        iconName='security'\n        color='#ff5b5a'\n        selected={selectedSafety.indexOf(2) === -1 ? false : true}\n        handler={() => context.selectSafety(2)}\n        value='Охрана'\n      />\n    </div>\n  )\n\n  const waysToGet = (\n    <div className={classes.block}>\n      <div className={classes.blockHeader}>\n        <h4>Как добраться</h4>\n      </div>\n      <IconButton\n        iconName='bus'\n        color='#8a6eac'\n        selected={selectedWaysToGet.indexOf(3) === -1 ? false : true}\n        handler={() => context.selectWayToGet(3)}\n        value='Автобус'\n      />\n      <IconButton\n        iconName='train'\n        color='#06b26b'\n        selected={selectedWaysToGet.indexOf(2) === -1 ? false : true}\n        handler={() => context.selectWayToGet(2)}\n        value='Электричка'\n      />\n    </div>\n  )\n\n  const villageTypes = (\n    <Box m={1}>\n      <Grid container>\n        <Grid item>\n          <Box m={1} className={classes.verticalCenter}>\n\n            <CheckBox\n              selected={selectedVillageTypes.indexOf(1) === -1 ? false : true}\n              setSelected={() => context.selectVillageType(1)}\n            />\n            <div className={classes.checkboxValue}>\n              <h5>Коттеджный поселок</h5>\n            </div>\n\n          </Box>\n        </Grid>\n        <Grid item>\n          <Box m={1} className={classes.verticalCenter}>\n            <CheckBox\n              selected={selectedVillageTypes.indexOf(2) === -1 ? false : true}\n              setSelected={() => context.selectVillageType(2)}\n            />\n            <div className={classes.checkboxValue}>\n              <h5>Дачный поселок</h5>\n            </div>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n\n  const expandedFilter = (\n    <div className={classes.expandedBody}>\n      <Grid container justifyContent='center' alignItems='flex-start'>\n\n        <Grid item xs={12} sm={6} md={3}>\n          {roads}\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3} >\n          {communications}\n        </Grid>\n\n\n        <Grid item xs={12} sm={6} md={3}>\n          {waysToGet}\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={3}>\n          {safety}\n        </Grid>\n\n\n      </Grid>\n    </div>\n  )\n\n  const miniFilter = (\n    <Grid container direction='row'>\n      <Grid item xs={12}>\n        {villageTypes}\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <div className={classes.itemFilter}>\n          <div className={classes.block}>\n            {blockAreas}\n          </div>\n        </div>\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <div className={classes.itemFilter}>\n          <div className={classes.block}>\n            {blockRoads}\n          </div>\n        </div>\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <div className={classes.itemFilter}>\n          <div className={classes.block}>\n            {blockDistance}\n          </div>\n        </div>\n      </Grid>\n      <Grid item xs={12} md={3}>\n        <div className={classes.itemFilter}>\n          <div className={classes.block}>\n            {blockPrice}\n          </div>\n        </div>\n      </Grid>\n    </Grid>\n  )\n\n  const filterControl = (\n    <div className={classes.filterControl}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n\n        <div\n          className={classes.filterBtn}\n          onClick={() => { context.resetFilter(); setHidden(); setFilterClicked(false); }}\n        >\n          <RotateLeftIcon />\n          Сбросить фильтр\n        </div>\n\n        {expanded || showMap ? '' :\n          <div\n            className={classes.filterBtn}\n            onClick={() => setShowMap(true)}\n          >\n            <MapIcon />\n            Показать на карте\n          </div>\n        }\n\n        {expanded ? '' :\n          <div\n            className={classes.filterBtn}\n            onClick={() => setExpanded(true)}\n          >\n            <ExpandMoreIcon />\n            Подробнее\n          </div>\n        }\n\n        <Link to='/villages' onClick={() => { setExpanded(false); setHidden(); setFilterClicked(true) }}>\n          <div\n            className={classes.filterBtn}\n          >\n            <button className='main-button' style={{ padding: '14px 30px' }}>\n              Подобрать ({context.filteredVillages.length})\n            </button>\n          </div>\n        </Link>\n      </Grid>\n    </div>\n  )\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.bg} />\n      <div className={classes.fg}>\n        {miniFilter}\n        {filterControl}\n        {showMap ? <div className={classes.map}>\n          <div\n            className={classes.closeMap}\n            onClick={() => setShowMap(false)}\n          >\n            <CloseIcon style={{ width: '35px', height: '35px', color: '#fff' }} />\n          </div>\n          <FilterMap villages={context.filteredVillages} />\n        </div> : ''}\n      </div>\n\n      <Dialog\n        open={expanded}\n        TransitionComponent={Transition}\n        onClose={() => { setExpanded(false); setHidden() }}\n        fullWidth={true}\n        maxWidth='lg'\n      >\n        <Grid container>\n          {miniFilter}\n          {expandedFilter}\n          {filterControl}\n        </Grid>\n      </Dialog>\n\n\n    </div>\n  )\n}\n\nexport default Filter\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Icons\\index.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\AnimSlider\\AnimSlider.js",["286","287"],"import React, {useEffect} from \"react\";\nimport Slider from \"react-animated-slider\";\nimport { Link } from 'react-router-dom';\nimport ArrowBottomAnim from '../ArrowBottomAnim'\nimport \"react-animated-slider/build/horizontal.css\";\nimport \"./slider-animations.css\"\nimport \"./styles.css\";\nimport \"./button.css\";\nimport slide1 from '../../img/images/kp-35-2.jpg'\n\nconst content = [\n  {\n    descr: \"Скидка 9% на участки в поселке Шелест\",\n    title: \"Только до 31 октября!\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-3-1.jpg\",\n    link: '/village/shelest',\n  },\n  {\n    descr: \"Скидка 10% на участки в поселке Фишер\",\n    title: \"Только до 31 октября!\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-35-2.jpg\",\n    link: '/village/fisher',\n  },\n  {\n    descr: \"Скидка до 10% на участки в поселке Фаворит\",\n    title: \"Только до 31 октября!\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-34-1.jpg\",\n    link: '/village/favorit',\n  },\n  {\n    descr: \"Участки в поселке Ртищево\",\n    title: \"В пешей доступности от ж/д Вельяминово\",\n    button: \"Подробнее\",\n    image: \"https://zagzem.ru/img/kp-51-1.jpg\",\n    link: '/village/rtishevo',\n  }\n];\n\nconst AnimSlider = () => (\n  <div>\n    <Slider\n      // autoplay\n        infinite\n        disabled={false}\n      touchDisabled={false}\n      className=\"slider-wrapper\"\n    >\n      {content.map((item, index) => (\n        <div\n          key={index}\n          className=\"slider-content\"\n          style={{ background: `url('${item.image}') no-repeat center center` }}\n        >\n          <div className=\"inner\">\n            <h2>{item.descr}</h2>\n            <h3>{item.title2} {item.title}</h3>\n            <Link to={item.link}>\n                <button className=\"btn btn-white btn-animate\">{item.button}</button>\n            </Link>\n          </div>\n        </div>\n      ))}\n    </Slider>\n    <ArrowBottomAnim />\n  </div>\n);\n\nexport default AnimSlider\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Icons\\Icons.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\CheckBox.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\FilterMap.js",["288","289"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {TrafficControl, YMaps} from \"react-yandex-maps\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  },\n}))\n\nconst FilterMap = (props) => {\n\n  const classes = useStyles()\n\n\n  const change = React.useCallback(()=> {\n  const villages = props.villages \n    const items = []\n    for (let i=0;i<villages.length;i++) {\n      const obj = {}\n      obj.coords = villages[i].coords\n      obj.name = villages[i].name\n      obj.uname = villages[i].uname\n      obj.bgs = villages[i].bgs\n      obj.type = villages[i].type === 1 ? 'Коттеджный поселок' : 'Дачный поселок'\n      items.push(obj)\n  }\n\n  window.ymaps.ready(function() {\n    var myMap = new window.ymaps.Map(\"map\", {\n      center: [55.760088, 37.617638],\n      zoom: 8,\n      controls: [],\n    })\n\n\n    var blueCollection = new window.ymaps.GeoObjectCollection(null, {\n      preset: 'islands#blueIcon'\n    })\n\n    for (var i = 0; i < items.length; i++) {\n      const obj = items[i]\n\n\n      var myPlacemark = new window.ymaps.Placemark(obj.coords, {\n        hintContent: obj.name,\n        balloonContent: `<img src=${obj.bgs[0]} width='100%' ><a href='/village/${obj.uname}'>${obj.type} ${obj.name}</a></img>`,\n      })\n      blueCollection.add(myPlacemark)\n    }\n    var zoomControl = new window.ymaps.control.ZoomControl({\n      options: {\n        size: \"auto\",\n        float: 'right',\n        position:{right:10, top: 200}\n      }\n    });\n\n    let trafficControl = new window.ymaps.control.TrafficControl({\n      options: {\n        float: 'right',\n        position:{right:90, top: 20}\n      }\n    })\n\n    let rulerControl = new window.ymaps.control.RulerControl({\n      options: {\n         float: 'right',\n        scaleLine: 'false',\n        position:{right:190, top: 20}\n      }\n    })\n\n    let locationControl = new window.ymaps.control.GeolocationControl({\n      options: {\n        float: 'right',\n        position: {right:10, bottom: 150}\n      }\n    })\n\n\n    // myMap.addControl(traffic);\n\n    myMap.controls.add(zoomControl);\n    myMap.controls.add(trafficControl);\n    myMap.controls.add(rulerControl)\n    myMap.controls.add(locationControl)\n    // myMap.behaviors.disable('scrollZoom')\n    myMap.geoObjects.add(blueCollection)\n\n  })\n  }, [props.villages])\n\n  React.useEffect(() => {\n    change()\n  }, [change])\n\n  return (\n    <div id=\"map\" className={classes.root}>\n    </div>\n  )\n\n\n\n}\n\nexport default FilterMap\n","F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\SingleSelect.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\Filter\\MultiSelect.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ArrowBottomAnim\\index.js",[],"F:\\1_Фриланс\\5_devFolder\\zagzem_local_for_build\\zagzem\\src\\components\\ArrowBottomAnim\\ArrowBottomAnim.js",[],{"ruleId":"290","severity":1,"message":"291","line":25,"column":32,"nodeType":"292","messageId":"293","endLine":25,"endColumn":34},{"ruleId":"294","severity":1,"message":"295","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":22},{"ruleId":"294","severity":1,"message":"298","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":18},{"ruleId":"294","severity":1,"message":"299","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":21},{"ruleId":"294","severity":1,"message":"300","line":12,"column":8,"nodeType":"296","messageId":"297","endLine":12,"endColumn":17},{"ruleId":"301","severity":1,"message":"302","line":234,"column":21,"nodeType":"303","endLine":234,"endColumn":162},{"ruleId":"294","severity":1,"message":"304","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":18},{"ruleId":"294","severity":1,"message":"300","line":24,"column":8,"nodeType":"296","messageId":"297","endLine":24,"endColumn":17},{"ruleId":"301","severity":1,"message":"302","line":292,"column":19,"nodeType":"303","endLine":292,"endColumn":157},{"ruleId":"294","severity":1,"message":"304","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":18},{"ruleId":"294","severity":1,"message":"305","line":17,"column":7,"nodeType":"296","messageId":"297","endLine":17,"endColumn":16},{"ruleId":"294","severity":1,"message":"306","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"307","line":9,"column":31,"nodeType":"296","messageId":"297","endLine":9,"endColumn":39},{"ruleId":"294","severity":1,"message":"308","line":132,"column":25,"nodeType":"296","messageId":"297","endLine":132,"endColumn":41},{"ruleId":"294","severity":1,"message":"309","line":138,"column":10,"nodeType":"296","messageId":"297","endLine":138,"endColumn":16},{"ruleId":"310","severity":1,"message":"311","line":159,"column":6,"nodeType":"312","endLine":159,"endColumn":31,"suggestions":"313"},{"ruleId":"294","severity":1,"message":"314","line":256,"column":7,"nodeType":"296","messageId":"297","endLine":256,"endColumn":20},{"ruleId":"310","severity":1,"message":"315","line":27,"column":8,"nodeType":"312","endLine":27,"endColumn":14,"suggestions":"316"},{"ruleId":"294","severity":1,"message":"317","line":10,"column":8,"nodeType":"296","messageId":"297","endLine":10,"endColumn":18},{"ruleId":"294","severity":1,"message":"304","line":13,"column":8,"nodeType":"296","messageId":"297","endLine":13,"endColumn":18},{"ruleId":"310","severity":1,"message":"318","line":126,"column":14,"nodeType":"319","endLine":126,"endColumn":26},{"ruleId":"294","severity":1,"message":"320","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":20},{"ruleId":"294","severity":1,"message":"321","line":23,"column":7,"nodeType":"296","messageId":"297","endLine":23,"endColumn":16},{"ruleId":"294","severity":1,"message":"322","line":5,"column":9,"nodeType":"296","messageId":"297","endLine":5,"endColumn":19},{"ruleId":"294","severity":1,"message":"323","line":114,"column":10,"nodeType":"296","messageId":"297","endLine":114,"endColumn":15},{"ruleId":"294","severity":1,"message":"324","line":115,"column":10,"nodeType":"296","messageId":"297","endLine":115,"endColumn":18},{"ruleId":"294","severity":1,"message":"325","line":115,"column":20,"nodeType":"296","messageId":"297","endLine":115,"endColumn":31},{"ruleId":"294","severity":1,"message":"326","line":157,"column":9,"nodeType":"296","messageId":"297","endLine":157,"endColumn":14},{"ruleId":"294","severity":1,"message":"327","line":176,"column":9,"nodeType":"296","messageId":"297","endLine":176,"endColumn":14},{"ruleId":"294","severity":1,"message":"328","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":19},{"ruleId":"294","severity":1,"message":"329","line":96,"column":9,"nodeType":"296","messageId":"297","endLine":96,"endColumn":16},{"ruleId":"294","severity":1,"message":"330","line":98,"column":9,"nodeType":"296","messageId":"297","endLine":98,"endColumn":12},{"ruleId":"294","severity":1,"message":"331","line":110,"column":9,"nodeType":"296","messageId":"297","endLine":110,"endColumn":21},{"ruleId":"294","severity":1,"message":"304","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":18},{"ruleId":"310","severity":1,"message":"332","line":693,"column":7,"nodeType":"312","endLine":693,"endColumn":14,"suggestions":"333"},{"ruleId":"294","severity":1,"message":"334","line":697,"column":12,"nodeType":"296","messageId":"297","endLine":697,"endColumn":15},{"ruleId":"294","severity":1,"message":"335","line":702,"column":11,"nodeType":"296","messageId":"297","endLine":702,"endColumn":21},{"ruleId":"336","severity":1,"message":"337","line":918,"column":35,"nodeType":"303","endLine":918,"endColumn":85},{"ruleId":"294","severity":1,"message":"338","line":6,"column":7,"nodeType":"296","messageId":"297","endLine":6,"endColumn":19},{"ruleId":"294","severity":1,"message":"339","line":7,"column":5,"nodeType":"296","messageId":"297","endLine":7,"endColumn":25},{"ruleId":"294","severity":1,"message":"340","line":12,"column":10,"nodeType":"296","messageId":"297","endLine":12,"endColumn":21},{"ruleId":"294","severity":1,"message":"341","line":12,"column":23,"nodeType":"296","messageId":"297","endLine":12,"endColumn":37},{"ruleId":"294","severity":1,"message":"342","line":13,"column":10,"nodeType":"296","messageId":"297","endLine":13,"endColumn":14},{"ruleId":"294","severity":1,"message":"343","line":13,"column":16,"nodeType":"296","messageId":"297","endLine":13,"endColumn":23},{"ruleId":"294","severity":1,"message":"344","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":18},{"ruleId":"294","severity":1,"message":"345","line":7,"column":9,"nodeType":"296","messageId":"297","endLine":7,"endColumn":27},{"ruleId":"294","severity":1,"message":"346","line":7,"column":29,"nodeType":"296","messageId":"297","endLine":7,"endColumn":45},{"ruleId":"294","severity":1,"message":"304","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":18},{"ruleId":"294","severity":1,"message":"347","line":42,"column":11,"nodeType":"296","messageId":"297","endLine":42,"endColumn":17},{"ruleId":"294","severity":1,"message":"348","line":50,"column":11,"nodeType":"296","messageId":"297","endLine":50,"endColumn":20},{"ruleId":"294","severity":1,"message":"349","line":155,"column":10,"nodeType":"296","messageId":"297","endLine":155,"endColumn":23},{"ruleId":"310","severity":1,"message":"350","line":175,"column":6,"nodeType":"312","endLine":175,"endColumn":32,"suggestions":"351"},{"ruleId":"294","severity":1,"message":"306","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"352","line":9,"column":8,"nodeType":"296","messageId":"297","endLine":9,"endColumn":14},{"ruleId":"294","severity":1,"message":"353","line":3,"column":9,"nodeType":"296","messageId":"297","endLine":3,"endColumn":23},{"ruleId":"294","severity":1,"message":"354","line":3,"column":25,"nodeType":"296","messageId":"297","endLine":3,"endColumn":30},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'CircleType' is defined but never used.","'DialogContent' is defined but never used.","'instagram' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'useStyles' is assigned a value but never used.","'useEffect' is defined but never used.","'villages' is defined but never used.","'setFilterClicked' is assigned a value but never used.","'render' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'buildingDirections' and 'buildingDirectionsHolded'. Either include them or remove the dependency array.","ArrayExpression",["355"],"'VillagesPage1' is defined but never used.","React Hook useEffect has missing dependencies: 'context', 'uname', 'village.name', and 'villages'. Either include them or remove the dependency array.",["356"],"'AnimSlider' is defined but never used.","Assignments to the 'target' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'CallbackForm' is defined but never used.","'languages' is assigned a value but never used.","'makeStyles' is defined but never used.","'price' is assigned a value but never used.","'fromMkad' is assigned a value but never used.","'setFromMkad' is assigned a value but never used.","'roads' is assigned a value but never used.","'areas' is assigned a value but never used.","'CardActions' is defined but never used.","'context' is assigned a value but never used.","'uid' is assigned a value but never used.","'permittedUse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'infoDescr'. Either include it or remove the dependency array.",["357"],"'url' is assigned a value but never used.","'Transition' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'postsPerPage' is assigned a value but never used.","'arrayForHoldingPosts' is assigned a value but never used.","'postsToShow' is assigned a value but never used.","'setPostsToShow' is assigned a value but never used.","'next' is assigned a value but never used.","'setNext' is assigned a value but never used.","'InputPhone' is defined but never used.","'isValidPhoneNumber' is defined but never used.","'parsePhoneNumber' is defined but never used.","'apiUrl' is assigned a value but never used.","'checkForm' is assigned a value but never used.","'filterClicked' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'change'. Either include it or remove the dependency array.",["358"],"'slide1' is defined but never used.","'TrafficControl' is defined but never used.","'YMaps' is defined but never used.",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},"Update the dependencies array to be: [buildingDirections, buildingDirectionsHolded, filterClicked, villages]",{"range":"367","text":"368"},"Update the dependencies array to be: [context, path, uname, village.name, villages]",{"range":"369","text":"370"},"Update the dependencies array to be: [infoDescr, props]",{"range":"371","text":"372"},"Update the dependencies array to be: [change, context.filteredVillages]",{"range":"373","text":"374"},[4225,4250],"[buildingDirections, buildingDirectionsHolded, filterClicked, villages]",[849,855],"[context, path, uname, village.name, villages]",[19381,19388],"[infoDescr, props]",[4038,4064],"[change, context.filteredVillages]"]