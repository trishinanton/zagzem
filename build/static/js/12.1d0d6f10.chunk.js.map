{"version":3,"sources":["components/Icons/icons.svg","components/Icons/Icons.js","components/Icons/index.js","components/StyledInput.js","components/InputPhone.js","api/api.js","components/IconButton.js","components/CallbackFormPopUp.js","components/IndicatorDots.js","components/ReviewCard.js","components/TargetForm.js","components/IconButtonTC.js","components/MyMap.jsx","components/CarouselButtons.js","components/CallbackPlanForm.js","img/images/villaLabel.png","components/Page.js","helpers/isImage.js","components/SimilarVillages.js","pages/village/index.js"],"names":["Icons","name","color","size","fill","width","height","xlinkHref","IconsSVG","useStyles","makeStyles","theme","root","props","position","padding","breakpoints","up","input","background","transition","cursor","borderRadius","border","outline","label","textTransform","StyledInput","handler","type","placeholder","value","classes","className","onChange","InputPhone","state","this","Fragment","defaultCountry","setValue","style","marginTop","React","Component","sendMessageAmoCRM","phone","email","text","formData","FormData","append","fetch","method","body","sendPlanAmoCRM","village","margin","icon","display","alignItems","justifyContent","left","selected","filter","txt","top","IconButton","iconName","tooltip","onClick","bodyForm","btnTarget","bodyText","fontFamily","fontSize","lineHeight","textarea","formContainer","flexDirection","CallbackFormPopUp","useState","setPhone","setName","setEmail","sending","setSending","container","align","item","xs","my","mx","e","target","val","console","log","x","test","isValidPhoneNumber","parsePhoneNumber","then","res","catch","alert","submit","Dot","backgroundColor","opacity","transitionDuration","IndicatorDots","wrapperStyle","zIndex","bottom","textAlign","total","Array","apply","map","i","index","boxShadow","img","cardContent","flexGrow","cardSubHeader","cardPrice","infoBlock","infoIcon","infoValue","ItemInfo","ReviewCard","useContext","AppState","uid","bgs","uname","road","fromMkad","price","leftLands","communications","priceLands","sideOfMkad","permittedUse","slides","length","push","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","objectFit","n","kk","infoList","Object","keys","key","loop","auto","widgets","to","join","replace","direction","Transition","forwardRef","ref","Slide","TargetForm","selectedVillage","Dialog","open","fullWidth","maxWidth","TransitionComponent","onClose","Grid","md","iconWrapper","minWidth","marginRight","IconButtonTC","MyMap","centerMap","center","zoom","zoomControl","controls","options","float","right","scaleLine","geometry","styles","wrapper","btn","userSelect","font","CarouselButtons","prevBtnStyle","assign","nextBtnStyle","prevHandler","nextHandler","CallbackPlanForm","Typography","Box","finally","header","subInfo","btns","descrBlock","descrImg","testImage","targetBlock","mapSection","minHeight","overflow","infoMapBlock","wrapperInfo","marginLeft","mapInfo","descrSection","genplan","iframe","borderWidth","ItemMapInfo","Page","showGenplan","setShowGenplan","showSendPlan","setShowSendPlan","showForm","setShowForm","waysToGetList","nature","infrastructure","waysToGet","descr","coords","plan","planPartners","plan_partners","safety","roadIn","roadTo","planImg","isImageData","url","isImage","infoCoords","infoDescr","textDescr","nn","rr","ww","infoListInfrastructure","infoListNature","infoListRoad","infoListSafety","nearSettlementName","nearSettlementDist","nearTownName","nearTownDist","nearRailwayName","nearRailwayDist","nearSettlement","distance","nearTown","nearRailway","rosreestrLink","rosreestr","useEffect","document","getElementById","innerHTML","children","pathname","useLocation","setUrl","Container","totalLands","area","fontWeight","window","spacing","id","src","alt","SimilarVillages","rerender","context","filteredVillages","el","newArr","sm","VillagePage","path","substr","setVillage","villages","scrollTo","m"],"mappings":"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","file":"static/js/12.1d0d6f10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icons.851c0213.svg\";","import React from 'react'\nimport IconsSVG from './icons.svg'\n\nfunction Icons({name, color, size}) {\n\n  return(\n    <svg\n      fill={color}\n      width={size}\n      height={size}\n    >\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\n    </svg>\n  )\n}\n\nexport default Icons\n","import Icons from './Icons'\n\nexport default Icons\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    position: 'relative',\n    padding: '15px 0px 0px 0px',\n    [theme.breakpoints.up('md')]: {\n      // width: '365px'\n    },\n\n  }),\n  input: props => ({\n    background: '#f9f9f9',\n    color: '#191a1d',\n    transition: 'border-color ease .3s',\n    cursor: 'pointer',\n    borderRadius: '1000px',\n    border: '2px solid #e2e2e2',\n    width: '100%',\n    padding: '15px 20px',\n    outline: '0',\n    '&:hover': {\n      border: '2px solid rgba(158,209,91,1)',\n    },\n  }),\n  label: {\n    padding: '10px',\n    color: '#919191',\n    width: '100%',\n    textTransform: 'uppercase',\n  }\n}))\n\nconst StyledInput = (props) => {\n\n  const handler = props.handler\n  const type = props.type\n  const placeholder = props.placeholder\n  const value = props.value\n\n  const classes = useStyles(props)\n\n  return (\n    <div className={classes.root}>\n      <input\n        type={type}\n        className={classes.input}\n        onChange={handler}\n        placeholder={placeholder}\n        value={value}\n      />\n    </div>\n  )\n}\n\nexport default StyledInput\n","import React from \"react\"\nimport PhoneInput from 'react-phone-number-input'\n//import 'react-phone-number-input/style.css'\nimport './InputPhone.css'\nimport {makeStyles} from \"@material-ui/styles\";\n\nclass InputPhone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    const value = this.props.value\n\n    return (\n      <React.Fragment>\n      <PhoneInput\n        defaultCountry=\"RU\"\n        placeholder=\"Введите номер телефона *\"\n        value={value}\n        onChange={this.props.setValue}\n        style={{\n          marginTop:'15px',\n          height:'4em',\n          // width: '365px'\n        }}\n      />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputPhone\n","\nexport const villages = []\n\nexport async function getDataFromWp(url) {\n    try {\n        let response = await fetch(url);\n        if(response.ok) {\n            let arrFromWp = await response.json()\n            arrFromWp.forEach(el => villages.push({id: el.id, ...el.acf}))\n        } else {\n            throw new Error(`Could not fetch ${url}`)\n        }\n    } catch (e) {\n        console.log(e);\n\n    }\n}\n\nexport function sendMessageAmoCRM(name, phone, email, text) {\n    let formData = new FormData();\n    formData.append('fields[name_2]', `Заявка с 'Загородные земли'`)\n    if(name) formData.append('fields[name_1]', name);\n    if(phone) formData.append('fields[222715_1][430461]', phone);\n    if(email) formData.append('fields[222717_1][430473]', email);\n    if(text) formData.append('fields[note_2]', text);\n\n    formData.append('form_id', '582790');\n    formData.append('hash', '384168b51bc44afef80081fe1c9de840');\n\n    return fetch('https://forms.amocrm.ru/queue/add', {\n        method: 'POST',\n        body: formData\n    })\n}\n\nexport function sendPlanAmoCRM(email, village) {\n    let formData = new FormData();\n\n    formData.append('fields[name_2]', 'Отправить планировку поселка на почту')\n    formData.append('fields[222717_1][430473]', email);\n    formData.append('fields[note_2]', `Отправить планировку поселка ${village} на ${email}`);\n\n    formData.append('form_id', '892084');\n    formData.append('hash', 'ecb202cf2535d0e2e6d8486fe5363dfd');\n\n    return fetch('https://forms.amocrm.ru/queue/add', {\n        method: 'POST',\n        body: formData\n    })\n}\n\n\n\n\n\n\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport Icons from './Icons'\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n    position: 'relative',\n    width: props.size === 'small' ? '50px' : \"calc(100% - 20px)\",\n    height: '55px',\n    margin: '5px',\n    padding: '5px 0px',\n    borderRadius: '1000px',\n    cursor: 'pointer'\n  })),\n  icon: (props => ({\n    position: 'absolute',\n    width:  '45px',\n    height: '45px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    left: '5px',\n    borderRadius: '50px',\n    background: props.selected ? props.color : '#e5eaeb', \n    filter: props.selected ? `brightness(1.1) ` : 'none',\n    transition: \"all 1s ease-out 0.5s\"\n  })),\n  txt: (props => ({\n    position: 'absolute',\n    top: '0',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    left: '70px', \n    color: props.selected ? '#000' : '#919fa3'\n  })),\n}))\n\nfunction IconButton(props) {\n  const value = props.value\n  const iconName = props.iconName\n  const color = props.color\n  const selected = props.selected\n  const size = props.size || 'default'\n  const tooltip = props.tooltip\n\n  const classes = useStyles({ color, selected, size })\n\n  if (size === 'small') {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div tooltip={tooltip} className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={24}\n          />\n        </div>\n      </div>\n    ) \n  } else {\n    return (\n      <div className={classes.root}\n        onClick={props.handler}\n      >\n        <div className={classes.icon}>\n          <Icons\n            name={iconName}\n            color={selected ? '#fff' : '#919fa3'}\n            size={size === 'small' ? 15 : 24}\n          />\n        </div>\n        <div className={classes.txt}>\n          <h5>{value}</h5>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconButton;\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport { isValidPhoneNumber, parsePhoneNumber } from 'react-phone-number-input'\nimport { makeStyles } from '@material-ui/styles'\nimport {sendMessageAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: (props => ({\n  })),\n  body: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  bodyForm: {\n    background: '#fff',\n    padding: '15px',\n    borderRadius: '15px',\n  },\n  btnTarget: {\n    margin: '10px 0px 0px 0px',\n  },\n  bodyText: {\n    fontFamily: 'FiraMedium',\n    padding: '15px',\n    fontSize: '2rem',\n    color: '#263238',\n    lineHeight: '110%',\n  },\n  textarea: {\n    width: '100%',\n    borderRadius: '15px',\n    background: '#f9f9f9',\n    color: '#191a1d',\n    cursor: 'pointer',\n    border: '2px solid #e2e2e2',\n    fontFamily: 'FiraLight',\n    fontSize: '1.25rem',\n    marginTop: '15px',\n    outline: '0',\n    padding: '15px'\n  },\n  formContainer: {\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'space-around',\n    [theme.breakpoints.up('md')]: {\n      flexDirection:'row',\n    },\n  }\n}))\n\nconst CallbackFormPopUp = (props) => {\n  const [phone, setPhone] = React.useState('')\n  const [name, setName] = React.useState('')\n  const [email, setEmail] = React.useState('')\n  const [sending, setSending] = React.useState(false)\n\n  const classes = useStyles({ })\n\n  const changePhone = val => {\n    console.log('val', val)\n    setPhone(val)\n  }\n\n  const submit = () => {\n\n    console.log('submit, phone', phone)\n\n    const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n    const x = emailRegexp.test(email)\n\n    if(name ) {\n      if(x) {\n        if(isValidPhoneNumber(phone)) {\n          const phoneNumber = parsePhoneNumber(phone)\n          if (phoneNumber) {\n            console.log('submit, phone valid')\n\n            sendMessageAmoCRM(name, phone, email)\n                .then(res => {\n                  setPhone('')\n                  setName('')\n                  setEmail('')\n                  setSending(true)\n                })\n                .catch(e => {\n                  setPhone('')\n                  setName('')\n                  setEmail('')\n                  setSending(true)\n                })\n          }\n        } else {\n          alert('Введите правильный номер телефона')\n          return\n        }\n      } else {\n        alert('Введите правильный адрес почты')\n        return\n      }\n    } else {\n      alert('Заполните обязательные поля')\n      return\n    }\n\n    console.log('submit, name', name)\n    console.log('submit, email', email)\n\n  }\n\n  if (sending) {\n    return (\n    <div className={classes.root}>\n      <Grid container justifyContent='center' alignItems='center'>\n        <Typography align='center' className={classes.bodyText}>\n          Письмо успешно отправлено, менеджер скоро с вами свяжется\n        </Typography>\n      </Grid>\n    </div>\n    )\n  } else {\n    return (\n      <div style={{margin: '15px'}} className={classes.root}>\n        <Grid container>\n          <Grid item xs={12}>\n            <div className={classes.bodyForm}>\n              <Box my={2} mx={4}>\n                <center>\n                  <h3 style={{fontSize:'27px'}}>Оставьте свои данные и мы свяжемся с вами</h3>\n                </center>\n              </Box>\n              {/*<Box className={classes.formContainer} >*/}\n                <StyledInput\n                    placeholder='Как вас зовут? *'\n                    handler={(e)=>setName(e.target.value)}\n                    value={name}\n                    type='text'\n                />\n                <StyledInput\n                    placeholder='Введите ваш email *'\n                    handler={(e)=>setEmail(e.target.value)}\n                    value={email}\n                    type='email'\n                />\n                <InputPhone\n                    value={phone}\n                    setValue={changePhone}\n                />\n                <div className={classes.btnTarget}>\n                  <Grid container justifyContent='center'>\n                    <button className='main-button' style={{margin: '0px'}} onClick={()=>submit()}>\n                      Отправить\n                    </button>\n                  </Grid>\n                </div>\n              {/*</Box>*/}\n\n            </div>\n          </Grid>\n        </Grid> \n      </div>\n    )\n  }\n}\n\nexport default CallbackFormPopUp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Dot (props) {\n  return (\n    <span style={{\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    }} />\n  )\n}\n\nexport default function IndicatorDots (props) {\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  }\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return <div style={wrapperStyle} />\n  } else {\n    return (\n      <div style={wrapperStyle}>{\n        Array.apply(null, Array(props.total)).map((x, i) => {\n          return <Dot key={i} selected={props.index === i} />\n        })\n      }</div>\n    )\n  }\n}\n\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}\n","/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from './IconButton'\nimport Carousel from 're-carousel'\nimport Grid from '@material-ui/core/Grid'\nimport Icons from './Icons'\nimport IndicatorDots from './IndicatorDots'\nimport AppState from \"../AppState\";\nimport LazyLoad from 'react-lazyload';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderRadius: '15px',\n    border: '1px solid #eff3f4',\n    boxShadow: 'none',\n  },\n  img: {\n    width: '100%',\n    height: '250px',\n    [theme.breakpoints.up('lg')]: {\n      height: '250px'\n    },\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardSubHeader: {\n    height: '60px',\n    display: 'flex',\n    alignItems: 'center',\n    transition: '.3s opacity',\n    '&:hover': {\n      opacity: '.6',\n      transition: '.3s opacity',\n    }\n  },\n  cardPrice: {\n  },\n  infoBlock: {\n    position: 'relative',\n    width: '100%',\n    height: '40px', \n  },\n  infoIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    width: '40px',\n    height: '100%',\n  },\n  infoValue: {\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    left: '45px',\n    top: '0',\n    width: 'calc(100% - 45px)',\n    height: '100%',\n  }\n}));\n\nconst ItemInfo = ({ icon, value }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.infoBlock}>\n      <div className={classes.infoIcon}>\n        <Icons\n          name={icon}\n          color='#607D8B'\n          size={24}\n        />\n      </div>\n      <div className={classes.infoValue}>\n        <h5 className='light-text'>{value}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default function ReviewCard(props) {\n\n  const context = React.useContext(AppState)\n\n  const uid = props.uid\n  const type = props.type || ''\n  const bgs = props.bgs || []\n  const name = props.name || ''\n  const uname = props.uname || ''\n  const road = props.road || ''\n  const fromMkad = props.fromMkad || ''\n  const price = props.price || ''\n  const leftLands = props.leftLands || ''\n  const communications = props.communications || {}\n  const priceLands = props.priceLands || []\n  const sideOfMkad = props.sideOfMkad || ''\n  const permittedUse = props.permittedUse || 2\n\n  const classes = useStyles()\n\n  const sides = ['Север','Юг','Запад','Восток','Юго-запад','Юго-восток','Северо-запад'] \n\n  const slides = []\n\n  for (let i=0;i<bgs.length;i++) {\n    slides.push(\n      <LazyLoad>\n        <img\n          key={'bgil'+i}\n          style={{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundImage: `url(${bgs[i]})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            objectFit: 'cover'\n          }}\n        />\n      </LazyLoad>\n    )\n  }\n\n  let kk = []\n  const infoList = []\n  if (communications) {\n    kk = Object.keys(communications)\n  }\n\n  // Communications\n  for (let i=0;i<kk.length;i++) {\n    const key = kk[i]\n    const value = communications[key] || ''\n    if (key === '1') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmn'}\n          iconName='svet'\n          color='#ffce01'\n          selected={true}\n          value={'Электричество '+value}\n          size='small'\n          tooltip='Электрификация'\n        />\n      )\n    }\n    if (key === '2') {\n      infoList.push(\n        <IconButton\n          key={key+i+'dfgh'}\n          iconName='water'\n          color='#4a7aff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Водоснабжение'\n        />\n      )\n    }\n    if (key === '3') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='gas'\n          color='#ff5b5a'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Газификация'\n        />\n      )\n    }\n    if (key === '4') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='checkpoint'\n          color='#ff5acc'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Ограждение'\n        />\n      )\n    }\n    if (key === '5') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='playground'\n          color='#5a5fff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Детская площадка'\n        />\n      )\n    }\n    if (key === '6') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='lighting'\n          color='#5abbff'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Освещение улиц'\n        />\n      )\n    }\n    if (key === '7') {\n      infoList.push(\n        <IconButton\n          key={key+i+'cmmh'}\n          iconName='sportsGround'\n          color='#5aff7d'\n          selected={true}\n          value={value}\n          size='small'\n          tooltip='Спортивная площадка'\n\n        />\n      )\n    }\n  }\n\n  function spaceInNumber(n) {\n    n += \"\";\n    n = new Array(4 - n.length % 3).join(\"U\") + n;\n    return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.img}>\n        <Carousel loop auto widgets={[IndicatorDots]}>\n          {slides}\n        </Carousel>\n      </div>\n\n      <Link\n          to={`/village/${uname}`}\n\n      >\n\n      <CardContent className={classes.cardContent}>\n        <h4 className={classes.cardSubHeader}><strong>{type === 1 ? 'Коттеджный поселок ' + name : 'Дачный поселок ' + name}</strong></h4>\n        <ItemInfo\n          icon='compass'\n          value={`${sides[sideOfMkad - 1]}, ${fromMkad} км. от МКАД`}\n        />\n        <ItemInfo\n          icon='car'\n          value={`${road}`}\n        />\n        <ItemInfo\n          icon='price'\n          value={`Сотка от ${price} р.`}\n        />\n        <ItemInfo\n          icon='mapPlaces'\n          value={`Участки от ${spaceInNumber(priceLands[0]) } р.`}\n        />\n        <ItemInfo\n          icon='flag'\n          value={`В продаже ${leftLands} шт.`}\n        />\n        <Grid container direction='row' alignItems='center' justifyContent='center' style={{}}>\n          {infoList}\n        </Grid>\n        <center>\n          <button className='main-button'>Подробнее</button>\n        </center>\n      </CardContent>\n      </Link>\n    </Card>\n  );\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {sendMessageAmoCRM} from \"../api/api\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '15px',\n    },\n    btnTarget: {\n        margin: '15px 0px 0px 0px',\n    },\n    bodyText: {\n        color: '#3c4b5a',\n    }\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TargetForm = (props) => {\n    const selectedVillage = props.selectedVillage\n    const [phone, setPhone] = React.useState('')\n    const [name, setName] = React.useState('')\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const apiUrl = 'https://zagzem.ru/api/'\n\n    const classes = useStyles({})\n\n    const changePhone = val => {\n        setPhone(val)\n    }\n\n    const checkForm = () => {\n        if (phone && isValidPhoneNumber(phone)) {\n            const phoneNumber = parsePhoneNumber(phone)\n            if (!phoneNumber) {\n                return false\n            }\n        }\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n            return false\n        }\n        return true\n    }\n\n    // const submit = async() => {\n    //   const check = await checkForm()\n    //   if (check) {\n    //     const options = {}\n    //     const body = { name: name, phone: phone, email: email}\n    //     options.method = 'POST'\n    //     options.headers = { 'Content-Type': 'application/json'}\n    //     options.body = JSON.stringify(body)\n    //     try {\n    //       const res = await fetch(`${apiUrl}viewRequest`, options)\n    //       if (res.status === 200) {\n    //         const result = await res.json()\n    //         if (result === null) {\n    //           alert('BAD JSON')\n    //           return false\n    //         }\n    //         setPhone('')\n    //         setName('')\n    //         setEmail('')\n    //         setSending(true)\n    //         alert('Submit Success!')\n    //       }\n    //     } catch(e) {\n    //       console.log('Fetch error: ', e)\n    //       return false\n    //     }\n    //   } else {\n    //     alert('Введите ваш номер телефона')\n    //   }\n    // }\n\n    const submit = () => {\n\n        console.log('submit, phone', phone)\n\n        if (name && email) {\n            if (isValidPhoneNumber(phone)) {\n                const phoneNumber = parsePhoneNumber(phone)\n                if (phoneNumber) {\n                    console.log('submit, phone valid')\n\n                    sendMessageAmoCRM(name, phone, email)\n                        .then(res => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                        .catch(e => {\n                            setPhone('')\n                            setName('')\n                            setEmail('')\n                            setSending(true)\n                        })\n                }\n            } else {\n                alert('Введите правильный номер телефона')\n                return\n            }\n        } else {\n            alert('Заполните обязательные поля')\n            return\n        }\n        // if (isValidPhoneNumber(phone)) {\n        //   const phoneNumber = parsePhoneNumber(phone)\n        //   debugger\n        //   if (phoneNumber) {\n        //     console.log('submit, phone valid')\n        //   } else {\n        //     alert('Введите правильный номер телефона')\n        //     return\n        //   }\n        // } else {\n        //   alert('Введите правильный номер телефона')\n        //   return\n        // }\n\n        console.log('submit, name', name)\n        console.log('submit, email', email)\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n        if (!x) {\n        }\n\n        // setPhone('')\n        // setName('')\n        // setEmail('')\n        // setSending(true)\n    }\n\n    if (sending) {\n        return (\n            <Dialog\n                open={sending}\n                fullWidth={true}\n                maxWidth='sm'\n                TransitionComponent={Transition}\n                onClose={() => setSending(false)}\n            >\n                <div className={classes.root}>\n                    <Grid container justifyContent='center' alignItems='center'>\n                        <h3>Запись на просмотр поселка {selectedVillage} прошла успешно, менеджер скоро с вами\n                            свяжется.</h3>\n                    </Grid>\n                </div>\n            </Dialog>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12} md={7} className={classes.body}>\n                        <center>\n                            <h3 style={{maxWidth: '520px'}}>Оставьте свои контактные данные, чтобы посмотреть участок</h3>\n                        </center>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <div className={classes.bodyForm}>\n                            <StyledInput\n                                placeholder='Как вас зовут?'\n                                handler={(e) => setName(e.target.value)}\n                                value={name}\n                                type='text'\n                            />\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <InputPhone\n                                value={phone}\n                                setValue={changePhone}\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Записаться на просмотр\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default TargetForm\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport Icons from './Icons'\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({\n        width: \"100%\",\n        margin: '5px',\n        display: 'flex',\n        padding: '5px 0px',\n        borderRadius: '1000px',\n        cursor: 'pointer'\n    })),\n    iconWrapper: (props => ({\n        position: \"relative\",\n        minWidth: \"45px\",\n        marginRight: \"20px\"\n    })),\n    icon: (props => ({\n        position: \"absolute\",\n        minWidth:  '45px',\n        top: \"20%\",\n        height: '45px',\n        display: 'flex',\n        marginRight: '20px',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: '50px',\n        background: props.selected ? props.color : '#e5eaeb',\n        filter: props.selected ? `brightness(1.1) ` : 'none',\n        transition: \"all 1s ease-out 0.5s\"\n    })),\n    txt: (props => ({\n        height: '100%',\n        color: props.selected ? '#000' : '#919fa3'\n    }))\n}))\n\nfunction IconButtonTC(props) {\n    const value = props.value\n    const iconName = props.iconName\n    const color = props.color\n    const selected = props.selected\n    const size = props.size || 'default'\n    const tooltip = props.tooltip\n\n    const classes = useStyles({ color, selected, size })\n\n    if (size === 'small') {\n        return (\n            <div className={classes.root}\n                 onClick={props.handler}\n            >\n                <div tooltip={tooltip} className={classes.icon}>\n                    <Icons\n                        name={iconName}\n                        color={selected ? '#fff' : '#919fa3'}\n                        size={24}\n                    />\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}\n                 onClick={props.handler}\n            >\n                <div className={classes.iconWrapper}>\n                    <div className={classes.icon}>\n                        <Icons\n                            name={iconName}\n                            color={selected ? '#fff' : '#919fa3'}\n                            size={size === 'small' ? 15 : 24}\n                        />\n                    </div>\n\n                </div>\n\n                <div className={classes.txt}>\n                    <h5>{value}</h5>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default IconButtonTC;\n","import React, {Component} from 'react'\nimport {YMaps, Map, Placemark, ZoomControl, TrafficControl, RulerControl, GeolocationControl} from 'react-yandex-maps'\nimport PropTypes from 'prop-types'\n\nclass MyMap extends Component {\n    static propTypes = {\n        centerMap: PropTypes.array\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        let centerMap = this.props.centerMap || [55.75, 37.57]\n        return (\n            <YMaps>\n                <Map\n                    state={{\n\n                        center: centerMap,\n                        zoom: 9,\n                        // behaviors: [\"disable('scrollZoom')\"],\n                        zoomControl: true,\n                        controls: [],\n                        options: {\n                            size: \"small\"\n                        }\n                    }}\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                    }}\n                >\n                    <TrafficControl options={{ float: 'right' }} />\n                    <RulerControl options={{ float: 'right' ,position:{right:110, top: 10}, scaleLine: 'false'}} />\n                    <ZoomControl options={{ float: 'right' , size: \"small\", position:{right:10, top: 200}}} />\n                    <GeolocationControl options={{ float: 'right', position: {right:10, bottom: 150} }} />\n                    <Placemark\n                        geometry={centerMap}\n                    />\n                </Map>\n            </YMaps>\n        )\n    }\n}\n\nexport {MyMap}\n","import React from 'react'\nimport propTypes from 'prop-types'\n\nconst styles = {\n  wrapper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '50%',\n    textAlign: 'center'\n  },\n  btn: {\n    width: '30px',\n    height: '30px',\n    cursor: 'pointer',\n    userSelect: 'none',\n    position: 'absolute',\n    bottom: '0',\n    font: '16px/30px sans-serif',\n    color: 'rgba(255,255,255,0.8)',\n    zIndex: '200'\n  },\n  left: {\n    left: '0'\n  },\n  right: {\n    right: '0'\n  }\n}\n\nexport default function CarouselButtons (props) {\n  const prevBtnStyle = Object.assign({}, styles.btn, styles.left)\n  const nextBtnStyle = Object.assign({}, styles.btn, styles.right)\n  const { index, total, loop, prevHandler, nextHandler } = props\n  return (\n    <div style={styles.wrapper}>\n      { (loop || index !== 0) && (\n        <div style={prevBtnStyle} onClick={prevHandler}>◀</div>\n      )}\n      { (loop || index !== total - 1) && (\n        <div style={nextBtnStyle} onClick={nextHandler}>▶</div>\n      )}\n    </div>\n  )\n}\n\nCarouselButtons.propTypes = {\n  index: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  prevHandler: propTypes.func,\n  nextHandler: propTypes.func\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport StyledInput from './StyledInput'\nimport InputPhone from './InputPhone'\nimport {isValidPhoneNumber, parsePhoneNumber} from 'react-phone-number-input'\nimport {makeStyles} from '@material-ui/styles'\nimport {sendPlanAmoCRM} from \"../api/api\";\n\nconst useStyles = makeStyles(theme => ({\n    root: (props => ({})),\n    body: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    bodyForm: {\n        background: '#fff',\n        padding: '15px',\n        borderRadius: '15px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    btnTarget: {\n        margin: '10px 0px 0px 0px',\n    },\n    bodyText: {\n        fontFamily: 'FiraMedium',\n        padding: '15px',\n        fontSize: '2rem',\n        color: '#263238',\n        lineHeight: '110%',\n    },\n    textarea: {\n        width: '100%',\n        borderRadius: '15px',\n        background: '#f9f9f9',\n        color: '#191a1d',\n        cursor: 'pointer',\n        border: '2px solid #e2e2e2',\n        fontFamily: 'FiraLight',\n        fontSize: '1.25rem',\n        marginTop: '15px',\n        outline: '0',\n        padding: '15px'\n    }\n}))\n\nconst CallbackPlanForm = (props) => {\n    const village = props.village\n    const [email, setEmail] = React.useState('')\n    const [sending, setSending] = React.useState(false)\n\n    const classes = useStyles({})\n\n    const submit = () => {\n        const emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n        const x = emailRegexp.test(email)\n\n        if (x) {\n            sendPlanAmoCRM(email, village)\n                .finally(()=>{\n                    setEmail('')\n                    setSending(true)\n                })\n        } else {\n            alert('Введите корректный адрес почты')\n        }\n\n\n    }\n\n    if (sending) {\n        return (\n            <div className={classes.root}>\n                <Grid container justifyContent='center' alignItems='center'>\n                    <Typography align='center' className={classes.bodyText}>\n                        Планировка поселка {village} отправлена на ваш email\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <div className={classes.root}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div className={classes.bodyForm}>\n                            <Box my={2} mx={4}>\n                                <center>\n                                    <h3>Планировка поселка {village}</h3>\n                                </center>\n                            </Box>\n                            <StyledInput\n                                placeholder='Введите ваш email'\n                                handler={(e) => setEmail(e.target.value)}\n                                value={email}\n                                type='email'\n                            />\n                            <div className={classes.btnTarget}>\n                                <Grid container justifyContent='center'>\n                                    <button className='main-button' onClick={() => submit()}>\n                                        Отправить\n                                    </button>\n                                </Grid>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default CallbackPlanForm \n","export default __webpack_public_path__ + \"static/media/villaLabel.00373197.png\";","import React, {useEffect, useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TargetForm from './TargetForm'\nimport IconButton from './IconButton'\nimport IconButtonTC from \"./IconButtonTC\";\nimport { MyMap } from './MyMap'\nimport IndicatorDots from './IndicatorDots'\nimport CarouselButtons from './CarouselButtons'\nimport Carousel from 're-carousel'\nimport Dialog from '@material-ui/core/Dialog'\nimport CallbackPlanForm from './CallbackPlanForm'\n\nimport testImage from '../img/images/villaLabel.png'\nimport CallbackFormPopUp from \"./CallbackFormPopUp\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {useLocation} from \"react-router-dom\";\n\nimport ImageZoom from \"react-image-zooom\";\nimport { isImage } from \"../helpers/isImage\";\n\nconst useStyles = makeStyles((theme) => ({\n    name: {\n        transition: 'all 0.3s ease-out',\n\n    },\n    header: {\n        width: '100%',\n        margin: '0 0px 40px 0px',\n    },\n    subInfo: {\n        width: '100%',\n        margin: '30px 0px 15px 0px',\n        padding: '5px',\n        borderRadius: '15px',\n    },\n    btns: {\n        margin: '30px 0px 30px 0px',\n    },\n    descrBlock: {\n        margin: '30px 0px 30px 0px',\n        background: 'none',\n        borderRadius: '15px',\n    },\n    descrImg: {\n        width: '100%',\n        height: '100%',\n        backgroundImage: `url(${testImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'contain'\n    },\n    targetBlock: {\n        margin: '30px 0px 30px 0px',\n        background: 'none',\n        borderRadius: '15px',\n    },\n    mapSection: {\n        position:'relative',\n        margin: '30px 0px 30px 0px',\n        background: '#fff',\n        borderRadius: '15px',\n        minHeight: '780px',\n        overflow: 'hidden',\n        [theme.breakpoints.up('md')]: {\n            minHeight: '460px',\n        },\n    },\n    btn: (props => ({\n        background: '#FFF',\n        color: '#0197fd',\n        transition: 'all ease .45s',\n        cursor: 'pointer',\n        borderRadius: '15px',\n        boxShadow: 'inset 0 0 0 1px #0197fd',\n        padding: '20px 20px',\n        margin: '5px 15px',\n        textAlign: 'center',\n        '&:hover': {\n            background: '#0197fd',\n            color: '#fff',\n        },\n    })),\n    infoMapBlock: {\n        position: 'relative',\n        width: 'calc(100% - 10px)',\n        height: '60px',\n        margin: '0px 0px 30px 10px',\n    },\n    infoBlock: {\n        position: 'relative',\n        width: 'calc(100% - 10px)',\n        height: '60px',\n        background: '#fff',\n        borderRadius: '15px',\n        margin: '5px',\n    },\n    infoIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        left: '10px',\n        top: '0',\n        width: '40px',\n        height: '100%',\n    },\n    infoValue: {\n        display: 'flex',\n        alignItems: 'center',\n        position: 'absolute',\n        left: '60px',\n        top: '0',\n        width: 'calc(100% - 70px)',\n        height: '100%',\n    },\n    wrapperInfo: {\n        marginLeft: '0px',\n        borderRadius: '15px',\n        background: '#fff',\n        [theme.breakpoints.up('md')]: {\n            marginLeft: '15px',\n        }\n    },\n    mapInfo: {\n        position: 'absolute',\n        padding: '30px 15px',\n        margin: '15px',\n        borderRadius: '15px',\n        background: '#fff',\n    },\n    descrSection: {\n        width: 'calc(100% - 30px)',\n        margin: '15px',\n        minHeight: '300px',\n        background: '#fff',\n        borderRadius: '15px',\n        padding: '40px 25px',\n    },\n    genplan: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        padding: '10px',\n    },\n    iframe: {\n        width: \"100%\",\n        height: \"30rem\",\n        borderRadius: \"5px\",\n        borderWidth: '0',\n    }\n}));\n\nconst ItemMapInfo = ({ name, value }) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.infoMapBlock}>\n            <h5 style={{margin:'5px 0'}}>{name}</h5>\n            <h4 style={{margin:'0'}}>{value}</h4>\n        </div>\n    )\n}\n\nexport default function Page (props){\n    console.log('newPage render',props.village)\n    const village = props.village\n    const [showGenplan, setShowGenplan] = React.useState(false)\n    const [showSendPlan, setShowSendPlan] = React.useState(false)\n    const [showForm, setShowForm] = React.useState(false)\n    // console.log('village.permittedUse', village.permittedUse)\n\n    const waysToGetList = []\n    const communications = village.communications\n    const nature = village.nature\n    const infrastructure = village.infrastructure\n    const waysToGet = village.waysToGet\n    const descr = village.descr\n    const coords = village.coords || [0,0]\n    const bgs = village.bgs\n    const plan = village.plan\n    const planPartners = village.plan_partners\n    const safety = village.safety\n    const roadIn = village.roadIn\n    const roadTo = village.roadTo\n\n\n    const planImg = plan || planPartners\n\n    const isImageData = isImage(planImg)\n\n    const classes = useStyles({planImg})\n\n    let infoCoords = []\n    if (coords) {\n        infoCoords = coords\n    }\n\n    const infoDescr = []\n    if (descr) {\n        for (let i=0;i<descr.length;i++) {\n            infoDescr.push(\n                <p key={'dscr'+i} className={classes.textDescr}>\n                    {descr[i]}\n                </p>\n            )\n        }\n    }\n\n    let kk = []\n    let nn = []\n    let rr = []\n    let ww = []\n    if (communications) {\n        kk = Object.keys(communications)\n    }\n    if (nature) {\n        nn = Object.keys(nature)\n    }\n    if (infrastructure) {\n        rr = Object.keys(infrastructure)\n    }\n    if (waysToGet) {\n        ww = Object.keys(waysToGet)\n    }\n\n    for (let i=0;i<ww.length;i++) {\n        const key = ww[i]\n        const value = waysToGet[key] || ''\n        if (key === '1') {\n            waysToGetList.push(\n                <Grid key={key+i+'wtg'} item xs={12} md={4} >\n                    <IconButtonTC\n                        iconName='car'\n                        color='#0197fd'\n                        selected={true}\n                        value={'На автомобиле: ' + value}\n                    />\n                </Grid>\n            )\n        }\n        if (key === '2') {\n            waysToGetList.push(\n                <Grid key={key+i+'wtg'} item xs={12} md={4}>\n                    <IconButtonTC\n                        iconName='bus'\n                        color='#8a6eac'\n                        selected={true}\n                        value={'На общественном транспорте: ' + value}\n                    />\n                </Grid>\n            )\n        }\n        if (key === '3') {\n            waysToGetList.push(\n                <Grid key={key+i+'wtg'} item xs={12} md={4}>\n                    <IconButtonTC\n                        iconName='train'\n                        color='#06b26b'\n                        selected={true}\n                        value={'На электричке: ' + value}\n                    />\n                </Grid>\n            )\n        }\n    }\n\n    const infoList = []\n    const infoListInfrastructure = []\n    const infoListNature = []\n    const infoListRoad = []\n    const infoListSafety = []\n\n    infoList.push(\n        <IconButton\n            key='cSXmmn'\n            iconName='mapPlace'\n            color='#0197fd'\n            selected={true}\n            value={village.permittedUse[0] === '1' ? 'Вид земель: ИЖС' : 'Вид земель: Дачное строительство'}\n        />\n    )\n\n    if (roadTo === 1) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_asphalt'\n                iconName='asphalt'\n                color='#6aa3a5'\n                selected={true}\n                handler={()=>{}}\n                value='До поселка асфальтированная дорога'\n            />\n        )\n    }\n    if (roadTo === 3) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_asphaltKroshka'\n                iconName='asphaltKroshka'\n                color='#4a7aff'\n                selected={true}\n                value='До поселка дорога из асф.крошки'\n            />\n        )\n    }\n    if (roadTo === 6) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_betonPlit'\n                iconName='betonPlit'\n                color='#ff5b5a'\n                selected={true}\n                value='До поселка дорога из бетонных плит'\n            />\n        )\n    }\n    if (roadTo === 5) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_5'\n                iconName='bitiyKirpich'\n                color='#ffce01'\n                selected={true}\n                value='До поселка дорога из битого кирпича'\n            />\n        )\n    }\n    if (roadTo === 4) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_4'\n                iconName='gruntovka'\n                color='#06b26b'\n                selected={true}\n                value='До поселка грунтовая дорога'\n            />\n        )\n    }\n    if (roadTo === 2) {\n        infoListRoad.push(\n            <IconButton\n                key='road_to_2'\n                iconName='sheben'\n                color='#8a6eac'\n                selected={true}\n                value='До поселка дорога из щебня'\n            />\n        )\n    }\n\n    if (roadIn === 1) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_1'\n                iconName='asphalt'\n                color='#6aa3a5'\n                selected={true}\n                value='В поселке асфальтированная дорога'\n            />\n        )\n    }\n    if (roadIn === 3) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_3'\n                iconName='asphaltKroshka'\n                color='#4a7aff'\n                selected={true}\n                value='В поселке дорога из асф. крошки'\n            />\n        )\n    }\n    if (roadIn === 6) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_6'\n                iconName='betonPlit'\n                color='#ff5b5a'\n                selected={true}\n                value='В поселке дорога из бетонных плит'\n            />\n        )\n    }\n    if (roadIn === 5) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_5'\n                iconName='bitiyKirpich'\n                color='#ffce01'\n                selected={true}\n                value='В поселке дорога из битого кирпича'\n            />\n        )\n    }\n    if (roadIn === 4) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_4'\n                iconName='gruntovka'\n                color='#06b26b'\n                selected={true}\n                value='В поселке грунтовая дорога'\n            />\n        )\n    }\n    if (roadIn === 2) {\n        infoListRoad.push(\n            <IconButton\n                key='road_in_2'\n                iconName='sheben'\n                color='#8a6eac'\n                selected={true}\n                value='В поселке дорога из щебня'\n            />\n        )\n    }\n\n    for (let i=0;i<kk.length;i++) {\n        const key = kk[i]\n        const value = communications[key] || ''\n        if (key === '1') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='svet'\n                    color='#ffce01'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Электрофикация '+value}\n                />\n            )\n        }\n        if (key === '2') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='water'\n                    color='#4a7aff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '3') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='gas'\n                    color='#ff5b5a'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '4') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='checkpoint'\n                    color='#ff5acc'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '5') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='playground'\n                    color='#5a5fff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '6') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='lighting'\n                    color='#5abbff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '7') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='sportsGround'\n                    color='#5aff7d'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '8') {\n            infoList.push(\n                <IconButton\n                    key={key+i+'cmmn'}\n                    iconName='canalization'\n                    color='#ff9e5a'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n    }\n\n    for (let i=0;i<rr.length;i++) {\n        const key = rr[i]\n        const value = infrastructure[key] || ''\n        if (key === '1') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='cart'\n                    color='#8a6eac'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Продукты в '+value}\n                />\n            )\n        }\n        if (key === '3') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='school'\n                    color='#f7173a'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Школа в '+value}\n                />\n            )\n        }\n        if (key === '4') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='detsad'\n                    color='#4a7aff'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Детский сад в '+value}\n                />\n            )\n        }\n        if (key === '5') {\n            infoListInfrastructure.push(\n                <IconButton\n                    key={key+i+'nfrs'}\n                    iconName='hospital'\n                    color='#06b26b'\n                    selected={true}\n                    handler={()=>{}}\n                    value={'Больница в '+value}\n                />\n            )\n        }\n    }\n\n    if (safety) {\n        for (let i=0;i<safety.length;i++) {\n            const key = safety[i]\n            if (key === '1') {\n                infoListSafety.push(\n                    <IconButton\n                        key={key+'sasc'}\n                        iconName='zabor'\n                        color='#6aa3a5'\n                        selected={true}\n                        handler={()=>{}}\n                        value='Поселок огорожен'\n                    />\n                )\n            }\n            if (key === '2') {\n                infoListSafety.push(\n                    <IconButton\n                        key={key+'sasc'}\n                        iconName='security'\n                        color='#ff5b5a'\n                        selected={true}\n                        handler={()=>{}}\n                        value='Есть охрана'\n                    />\n                )\n            }\n        }\n    }\n\n    for (let i=0;i<nn.length;i++) {\n        const key = nn[i]\n        const value = nature[key] || ''\n        if (key === '1') {\n            infoListNature.push(\n                <IconButton\n                    key={key+i+'ntr'}\n                    iconName='vodoem'\n                    color='#5277f5'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '2') {\n            infoListNature.push(\n                <IconButton\n                    key={key+i+'ntr'}\n                    iconName='tree'\n                    color='#06b26b'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n        if (key === '3') {\n            infoListNature.push(\n                <IconButton\n                    key={key+i+'ntr'}\n                    iconName='tree'\n                    color='#ffce01'\n                    selected={true}\n                    handler={()=>{}}\n                    value={value}\n                />\n            )\n        }\n    }\n\n    let nearSettlementName = ''\n    let nearSettlementDist = ''\n    let nearTownName = ''\n    let nearTownDist = ''\n    let nearRailwayName = ''\n    let nearRailwayDist = ''\n    if (village.nearSettlement) {\n        nearSettlementName = village.nearSettlement.name\n        nearSettlementDist = village.nearSettlement.distance\n    }\n    if (village.nearTown) {\n        nearTownName = village.nearTown.name\n        nearTownDist = village.nearTown.distance\n    }\n    if (village.nearRailway) {\n        nearRailwayName = village.nearRailway.name\n        nearRailwayDist = village.nearRailway.distance\n    }\n\n    let rosreestrLink = ''\n    if (village.rosreestr) {\n        rosreestrLink = village.rosreestr\n    }\n\n    const slides = []\n\n    if (bgs){\n        for (let i=0;i<bgs.length;i++) {\n            slides.push(\n                <div\n                    key={'bgil'+i}\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                        height: '100%',\n                        backgroundImage: `url(${bgs[i]})`,\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center',\n                        backgroundSize: 'cover',\n                    }}\n                />\n            )\n        }\n    }\n\n    useEffect(()=>{\n        document.getElementById('description-page').innerHTML=`${infoDescr[0].props.children}`\n    },[props])\n\n    const {pathname} = useLocation()\n    console.log('pathnew', pathname)\n    const [url, setUrl] = useState('');\n\n    useEffect(()  => {\n        setUrl(pathname)\n    }, [pathname])\n    const Transition = React.forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"up\" ref={ref} {...props} />;\n    });\n\n    function spaceInNumber(n) {\n        n += \"\";\n        n = new Array(4 - n.length % 3).join(\"U\") + n;\n        return n.replace(/([0-9U]{3})/g, \"$1 \").replace(/U/g, \"\");\n    }\n\n    return (\n        <>\n            <Dialog\n                open={showForm}\n                fullWidth={true}\n                maxWidth='sm'\n                // TransitionComponent={Transition}\n                onClose={() => {\n                    setShowForm(false)\n                }}\n            >\n                <CallbackFormPopUp />\n            </Dialog>\n\n            <Container maxWidth='lg'>\n                <div className={classes.header}>\n                    <Grid container alignItems='center'>\n                        <h3 className={classes.name} style={{padding:'25px 0 15px 0'}}>{village.type === 1 ? 'Коттеджный поселок ' + village.name : 'Дачный поселок ' + village.name}</h3>\n                    </Grid>\n                    <Grid container alignItems='center'>\n                        <Grid item xs={12} md={4}>\n                            <h4 style={{padding:'10px 0'}}>Участков <span style={{color:'#0197fd'}}>{village.totalLands}</span></h4>\n                            <h4 style={{padding:'10px 0'}}>В продаже <span style={{color:'#0197fd'}}>{village.leftLands}</span></h4>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <h4 style={{padding:'10px 0'}}>{village.area} р-он</h4>\n                            <h4 style={{padding:'10px 0'}}>{village.road}</h4>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <h4 style={{padding:'10px 0'}}><span style={{color:'#0197fd'}}>{village.fromMkad}</span> км. от МКАД</h4>\n                            <h4 style={{padding:'10px 0'}}>От <span style={{color:'#0197fd'}}>{spaceInNumber(village.price)}</span> руб/сотка</h4>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <Grid container>\n                    <Grid item xs={12} md={8}>\n                        <div style={{height:'440px',borderRadius:'15px',overflow:'hidden'}}>\n                            <Carousel loop auto widgets={[IndicatorDots, CarouselButtons]}>\n                                {slides}\n                            </Carousel>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <div className={classes.wrapperInfo}>\n                            {infoList}\n                        </div>\n                        <div style={{margin:'30px 15px'}}>\n                            <center>\n\n\n                                <button onClick={()=> setShowForm(true)} className='main-button'>\n                                    Записаться на просмотр\n                                </button>\n\n\n                            </center>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <h4 style={{padding:'15px 0'}}>Координаты GPS: <span style={{color:'#0197fd'}}>{coords[0]}, {coords[1]}</span></h4>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <div className={classes.btns}>\n                    <Grid container>\n                        <Grid item xs={12} md={4}>\n                            {\n                                planImg && <button className='main-button' style={{\n                                    width: '94%',\n                                    fontSize: '99%',\n                                    fontWeight: 'bold',\n                                    margin: '10px 5%'\n                                }}\n                                                   onClick={() => setShowGenplan(true)}\n                                >\n                                    Планировка поселка\n                                </button>\n                            }\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                                    onClick={()=>{window.open(rosreestrLink, '_blank')}}\n                            >\n                                Кадастровая карта\n                            </button>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <button className='main-button' style={{width:'94%',fontSize:'99%',fontWeight:'bold', margin:'10px 5%'}}\n                                    onClick={()=>setShowSendPlan(true)}\n                            >\n                                Отправить планировку на email\n                            </button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                        <div className={classes.wrapperInfo}>\n                            <h4 style={{padding:'15px'}}>Дороги</h4>\n                            {infoListRoad}\n                        </div>\n                    </Grid>\n                    {infoListSafety.length < 1 ? '' :\n                        <Grid item xs={12} md={6}>\n                            <div className={classes.wrapperInfo}>\n                                <h4 style={{padding:'15px'}}>Безопасность</h4>\n                                {infoListSafety}\n                            </div>\n                        </Grid>\n                    }\n                    <Grid item xs={12} md={6}>\n                        <div className={classes.wrapperInfo}>\n                            <h4 style={{padding:'15px'}}>Природа</h4>\n                            {infoListNature}\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <div className={classes.wrapperInfo}>\n                            <h4 style={{padding:'15px'}}>Инфраструктура</h4>\n                            {infoListInfrastructure}\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <div className={classes.descrBlock}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <h3 style={{padding:'25px 0 15px 0'}}>Описание поселка</h3>\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <div className={classes.descrImg} />\n                        </Grid>\n                        <Grid item xs={12} md={7}>\n                            <div className={classes.descrSection}>\n                                <span id={'description-page'}> </span>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <h3 style={{padding:'25px 0 15px 0'}}>Как добраться</h3>\n                <div className={classes.mapSection}>\n                    <Grid container>\n                        <MyMap\n                            centerMap={infoCoords}\n                        />\n                        <Grid item xs={12} md={4}>\n                            <div className={classes.mapInfo}>\n                                <ItemMapInfo\n                                    name='Ближайший населенный пункт'\n                                    value={nearSettlementName + ' - ' + nearSettlementDist}\n                                />\n                                <ItemMapInfo\n                                    name='Ближайший город'\n                                    value={nearTownName + ' - ' + nearTownDist}\n                                />\n                                <ItemMapInfo\n                                    name='Ближайшая ж/д станция'\n                                    value={nearRailwayName + ' - ' + nearRailwayDist}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg' style={{margin: '40px auto'}}>\n                <div className={classes.subInfo}>\n                    <Grid container justifyContent='space-around'>\n                        {waysToGetList}\n                    </Grid>\n                </div>\n            </Container>\n\n            <Container maxWidth='lg'>\n                <div id='target-block' className={classes.targetBlock}>\n                    <TargetForm selectedVillage={village.name} />\n                </div>\n            </Container>\n\n            {\n\n                planImg && <Dialog\n                    fullWidth={true}\n                    maxWidth='xl'\n                    open={showGenplan}\n                    onClose={() => setShowGenplan(false)}\n                >\n\n                    <div className={classes.genplan}>\n                        {\n                            isImageData\n                                ? <ImageZoom src={planImg} alt=\"Genplan village\" zoom={200}/>\n                                : <iframe className={classes.iframe} src={planImg}/>\n                        }\n                    </div>\n                </Dialog>\n\n            }\n\n            <Dialog\n                fullWidth={true}\n                maxWidth='sm'\n                open={showSendPlan}\n                onClose={()=>setShowSendPlan(false)}\n            >\n                <CallbackPlanForm village={village.name}/>\n            </Dialog>\n        </>\n    )\n}\n","export function isImage(url) {\n    if (url) {\n        return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\n    }\n}\n","import React from 'react';\nimport AppState from '../AppState'\nimport Grid from '@material-ui/core/Grid'\nimport ReviewCard from './ReviewCard'\n\nconst postsPerPage = 3;\nlet arrayForHoldingPosts = []\n\nconst SimilarVillages = ({rerender, uid, road, price, ...props}) => {\n  const context = React.useContext(AppState)\n\n  const [postsToShow, setPostsToShow] = React.useState([]);\n  const [next, setNext] = React.useState(3);\n\n  // const loopWithSlice = (start, end) => {\n  //   const slicedPosts = ReviewCard.slice(start, end);\n  //   arrayForHoldingPosts = [...arrayForHoldingPosts, ...slicedPosts];\n  //   setPostsToShow(arrayForHoldingPosts);\n  // };\n\n  // const filteredVillages = context.filteredVillages\n  let filteredVillages = context.filteredVillages.filter(el => el.road === road && el.price >= (price - price*0.2) && el.price <= (price + price*0.2))\n\n\n  const newArr = []\n  for (let i=0;i<filteredVillages.length;i++) {\n    if (newArr.length < 3) {\n    if (uid !== filteredVillages[i].uid) {\n      newArr.push(\n        <Grid item\n          key={'IpL'+filteredVillages[i].uname+i}\n          xs={12}\n          sm={6}\n          md={4}\n        >\n          <ReviewCard\n            type={filteredVillages[i].type}\n            uname={filteredVillages[i].uname}\n            name={filteredVillages[i].name}\n            bgs={filteredVillages[i].bgs}\n            road={filteredVillages[i].road}\n            fromMkad={filteredVillages[i].fromMkad}\n            price={filteredVillages[i].price}\n            leftLands={filteredVillages[i].leftLands}\n            priceLands={filteredVillages[i].priceLands}\n            sideOfMkad={filteredVillages[i].sideOfMkad}\n            communications={filteredVillages[i].communications}\n\n          />\n        </Grid>\n      )\n    }\n    }\n  }\n  // eslint-disable-next-line no-lone-blocks\n  {if (filteredVillages.length < 2) {\n    return ''\n  }else {\n    return (\n        <>\n          <h3 style={{padding:'25px 0 15px 15px'}}>Если вы смотрите этот поселок, то вам подойдут:</h3>\n          <Grid container spacing={3} style={{justifyContent:'center'}}>\n            {/*<div style={{display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>*/}\n            {newArr}\n            {/*</div>*/}\n          </Grid>\n        </>\n\n    )\n  }}\n\n}\n\nexport default SimilarVillages\n","import React, {useContext, useEffect, useState} from 'react'\nimport AppState from '../../AppState'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Page from '../../components/Page'\nimport SimilarVillages from '../../components/SimilarVillages'\nimport {useLocation} from \"react-router-dom\";\n\nexport const VillagePage = () => {\n    const context = useContext(AppState)\n    const path = useLocation()\n\n    const uname = path.pathname.substr(9)\n    const [village, setVillage] = useState({})\n    const villages = context.villages\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n\n        for (let i = 0; i < villages.length; i++) {\n            if (villages[i].uname === uname) {\n                setVillage(villages[i])\n            }\n        }\n        context.selectedVillage = village.name\n\n    }, [path])\n\n    return (<>\n        {Object.keys(village).length && <>\n            <Page village={village}/>\n            <Container maxWidth='lg'\n                       style={{\n                           padding: '15px 0'\n                       }}\n            >\n                <Box m={2}>\n                    <SimilarVillages uid={village.uid}\n                                     road={village.road} price={village.price}/>\n                </Box>\n            </Container>\n        </>}\n    </>)\n\n}\n\nexport default VillagePage\n"],"sourceRoot":""}